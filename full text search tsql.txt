

CREATE FUNCTION [dbo].[edit_distance_within](@s nvarchar(4000), @t nvarchar(4000), @d int)
RETURNS int
AS
BEGIN
  DECLARE @sl int, @tl int, @i int, @j int, @sc nchar, @c int, @c1 int,
    @cv0 nvarchar(4000), @cv1 nvarchar(4000), @cmin int
  SELECT @sl = LEN(@s), @tl = LEN(@t), @cv1 = '', @j = 1, @i = 1, @c = 0
  WHILE @j <= @tl
    SELECT @cv1 = @cv1 + NCHAR(@j), @j = @j + 1
  WHILE @i <= @sl
  BEGIN
    SELECT @sc = SUBSTRING(@s, @i, 1), @c1 = @i, @c = @i, @cv0 = '', @j = 1, @cmin = 4000
    WHILE @j <= @tl
    BEGIN
      SET @c = @c + 1
      SET @c1 = @c1 - CASE WHEN @sc = SUBSTRING(@t, @j, 1) THEN 1 ELSE 0 END
      IF @c > @c1 SET @c = @c1
      SET @c1 = UNICODE(SUBSTRING(@cv1, @j, 1)) + 1
      IF @c > @c1 SET @c = @c1
      IF @c < @cmin SET @cmin = @c
      SELECT @cv0 = @cv0 + NCHAR(@c), @j = @j + 1
    END
    IF @cmin > @d BREAK
    SELECT @cv1 = @cv0, @i = @i + 1
  END
  RETURN CASE WHEN @cmin <= @d AND @c <= @d THEN @c ELSE -1 END
END
GO













CREATE FUNCTION [dbo].[GetListLev]
(
   @searched_str nvarchar(4000), 
   @max_lev int
)
RETURNS @returntable TABLE
(
    Id int,
	levName int,
levText int,
levTextInp int,
levTextOut int,
levTextObj int,
levTextApp int,
levTextLit int
	
	
	/*,
    dev int*/

)
AS
BEGIN
    DECLARE @lev int;


--!!!!!!!!!!!! можно\нужно не объ€вл€ть
	CREATE TABLE #selectedList
(Id INT IDENTITY,
levName int,
levText int,
levTextInp int,
levTextOut int,
levTextObj int,
levTextApp int,
levTextLit int);


    --SELECT IDFE/*,TODO*/ FROM FETexts order by edit_distance_within(Name,@searched_str,@max_lev) /*>= 0*/
	 --SELECT IDFE/*,TODO*/ FROM FETexts order by edit_distance_within(Name,@searched_str,@max_lev) /*>= 0*/

	 select  
	 IDFE as Id, 
	 edit_distance_within(Name,@searched_str,@max_lev) as levName,
	 edit_distance_within(FETexts.Text,@searched_str,@max_lev) as levText,
	 edit_distance_within(TextInp,@searched_str,@max_lev) as levTextInp,
	 edit_distance_within(TextOut,@searched_str,@max_lev) as levTextOut,
	 edit_distance_within(TextObj,@searched_str,@max_lev) as levTextObj,
	 edit_distance_within(TextApp,@searched_str,@max_lev) as levTextApp,
	 edit_distance_within(TextLit,@searched_str,@max_lev) as levTextLit
	 
	 INTO #OrdersSummary
FROM FETexts;



--!!!!!!!  производна€ таблица

--WITH selectedList AS
--(
--    select  
--	 IDFE as Id 
--    FROM FETexts
    
--)
--SELECT * FROM selectedList




insert @returntable

select Id from #OrdersSummary 
where 
levName>=0 or  --and levName<=@max_lev)
levText >=0 or
levTextInp >=0 or
levTextOut >=0 or
levTextObj >=0 or
levTextApp >=0 or
levTextLit >=0
order by 
levName,
levText ,
levTextInp ,
levTextOut ,
levTextObj ,
levTextApp ,
levTextLit ;

drop table #OrdersSummary;
    RETURN
END












CREATE PROCEDURE [dbo].[Procedure]
(
    @searched_str nvarchar(4000), 
   @max_lev int
   )

AS

WITH selectedList AS
(
    select  
	 IDFE as Id, 
	 edit_distance_within(Name,@searched_str,@max_lev) as levName,
	 edit_distance_within(FETexts.Text,@searched_str,@max_lev) as levText,
	 edit_distance_within(TextInp,@searched_str,@max_lev) as levTextInp,
	 edit_distance_within(TextOut,@searched_str,@max_lev) as levTextOut,
	 edit_distance_within(TextObj,@searched_str,@max_lev) as levTextObj,
	 edit_distance_within(TextApp,@searched_str,@max_lev) as levTextApp,
	 edit_distance_within(TextLit,@searched_str,@max_lev) as levTextLit
	 

FROM FETexts
    
)
SELECT * FROM selectedList where 
levName>=0 or  --and levName<=@max_lev)
levText >=0 or
levTextInp >=0 or
levTextOut >=0 or
levTextObj >=0 or
levTextApp >=0 or
levTextLit >=0
order by 
levName,
levText ,
levTextInp ,
levTextOut ,
levTextObj ,
levTextApp ,
levTextLit 

GO





























CREATE PROCEDURE [dbo].[Procedure]
(
    @searched_str nvarchar(4000), 
   @max_lev int
   )

AS

WITH selectedList AS
(
    select  
	 IDFE as Id, 
	 dbo.edit_distance_within(FETexts.Name,@searched_str,@max_lev) as levName,
	 dbo.edit_distance_within(FETexts.Text,@searched_str,@max_lev) as levText,
	 dbo.edit_distance_within(TextInp,@searched_str,@max_lev) as levTextInp,
	 dbo.edit_distance_within(TextOut,@searched_str,@max_lev) as levTextOut,
	 dbo.edit_distance_within(TextObj,@searched_str,@max_lev) as levTextObj,
	 dbo.edit_distance_within(TextApp,@searched_str,@max_lev) as levTextApp,
	 dbo.edit_distance_within(TextLit,@searched_str,@max_lev) as levTextLit
	 

FROM FETexts

    
)



SELECT * FROM selectedList where 
levName>=0 or  --and levName<=@max_lev)
levText >=0 or
levTextInp >=0 or
levTextOut >=0 or
levTextObj >=0 or
levTextApp >=0 or
levTextLit >=0
order by 
levName,
levText ,
levTextInp ,
levTextOut ,
levTextObj ,
levTextApp ,
levTextLit 

GO

















----------------------------------------------------------------------------------------------






ALTER PROCEDURE [dbo].[Procedure]
(
    @searched_str nvarchar(4000), 
   @max_lev int
   )

AS

WITH selectedList AS
(
    select  
	 IDFE as Id, 
	 dbo.edit_distance_within(FETexts.Name,@searched_str,@max_lev) as levName,
	 dbo.edit_distance_within(FETexts.Text,@searched_str,@max_lev) as levText,
	 dbo.edit_distance_within(TextInp,@searched_str,@max_lev) as levTextInp,
	 dbo.edit_distance_within(TextOut,@searched_str,@max_lev) as levTextOut,
	 dbo.edit_distance_within(TextObj,@searched_str,@max_lev) as levTextObj,
	 dbo.edit_distance_within(TextApp,@searched_str,@max_lev) as levTextApp,
	 dbo.edit_distance_within(TextLit,@searched_str,@max_lev) as levTextLit
	 

FROM FETexts

    
)



SELECT * FROM selectedList where 
levName>=0 or  --and levName<=@max_lev)
levText >=0 or
levTextInp >=0 or
levTextOut >=0 or
levTextObj >=0 or
levTextApp >=0 or
levTextLit >=0
order by 
levName,
levText ,
levTextInp ,
levTextOut ,
levTextObj ,
levTextApp ,
levTextLit 

















ALTER FUNCTION [dbo].[edit_distance_within](@s nvarchar(4000), @t nvarchar(4000), @d int)
RETURNS int
AS
BEGIN
  DECLARE @sl int, @tl int, @i int, @j int, @sc nchar, @c int, @c1 int,
    @cv0 nvarchar(4000), @cv1 nvarchar(4000), @cmin int
  SELECT @sl = LEN(@s), @tl = LEN(@t), @cv1 = '', @j = 1, @i = 1, @c = 0
  WHILE @j <= @tl
    SELECT @cv1 = @cv1 + NCHAR(@j), @j = @j + 1
  WHILE @i <= @sl
  BEGIN
    SELECT @sc = SUBSTRING(@s, @i, 1), @c1 = @i, @c = @i, @cv0 = '', @j = 1, @cmin = 4000
    WHILE @j <= @tl
    BEGIN
      SET @c = @c + 1
      SET @c1 = @c1 - CASE WHEN @sc = SUBSTRING(@t, @j, 1) THEN 1 ELSE 0 END
      IF @c > @c1 SET @c = @c1
      SET @c1 = UNICODE(SUBSTRING(@cv1, @j, 1)) + 1
      IF @c > @c1 SET @c = @c1
      IF @c < @cmin SET @cmin = @c
      SELECT @cv0 = @cv0 + NCHAR(@c), @j = @j + 1
    END
    IF @cmin > @d BREAK
    SELECT @cv1 = @cv0, @i = @i + 1
  END
  RETURN CASE WHEN @cmin <= @d AND @c <= @d THEN @c ELSE -1 END
END










