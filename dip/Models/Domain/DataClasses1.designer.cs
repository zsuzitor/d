#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dip.Models.Domain
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;
    using System.ComponentModel.DataAnnotations;

    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SOFI")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActionPro(ActionPro instance);
    partial void UpdateActionPro(ActionPro instance);
    partial void DeleteActionPro(ActionPro instance);
    partial void InsertAction(Action instance);
    partial void UpdateAction(Action instance);
    partial void DeleteAction(Action instance);
    partial void InsertActionSpec(ActionSpec instance);
    partial void UpdateActionSpec(ActionSpec instance);
    partial void DeleteActionSpec(ActionSpec instance);
    partial void InsertActionType(ActionType instance);
    partial void UpdateActionType(ActionType instance);
    partial void DeleteActionType(ActionType instance);
    partial void InsertActionVrem(ActionVrem instance);
    partial void UpdateActionVrem(ActionVrem instance);
    partial void DeleteActionVrem(ActionVrem instance);
    partial void InsertAllAction(AllAction instance);
    partial void UpdateAllAction(AllAction instance);
    partial void DeleteAllAction(AllAction instance);
    partial void InsertFEAction(FEAction instance);
    partial void UpdateFEAction(FEAction instance);
    partial void DeleteFEAction(FEAction instance);
    partial void InsertFEIndex(FEIndex instance);
    partial void UpdateFEIndex(FEIndex instance);
    partial void DeleteFEIndex(FEIndex instance);
    partial void InsertFEObject(FEObject instance);
    partial void UpdateFEObject(FEObject instance);
    partial void DeleteFEObject(FEObject instance);
    partial void InsertFEText(FEText instance);
    partial void UpdateFEText(FEText instance);
    partial void DeleteFEText(FEText instance);
    partial void InsertFizVel(FizVel instance);
    partial void UpdateFizVel(FizVel instance);
    partial void DeleteFizVel(FizVel instance);
    partial void InsertNewFEIndex(NewFEIndex instance);
    partial void UpdateNewFEIndex(NewFEIndex instance);
    partial void DeleteNewFEIndex(NewFEIndex instance);
    partial void InsertNeZakon(NeZakon instance);
    partial void UpdateNeZakon(NeZakon instance);
    partial void DeleteNeZakon(NeZakon instance);
    partial void InsertPro(Pro instance);
    partial void UpdatePro(Pro instance);
    partial void DeletePro(Pro instance);
    partial void InsertSpec(Spec instance);
    partial void UpdateSpec(Spec instance);
    partial void DeleteSpec(Spec instance);
    partial void InsertThe(The instance);
    partial void UpdateThe(The instance);
    partial void DeleteThe(The instance);
    partial void InsertThesChild(ThesChild instance);
    partial void UpdateThesChild(ThesChild instance);
    partial void DeleteThesChild(ThesChild instance);
    partial void InsertVrem(Vrem instance);
    partial void UpdateVrem(Vrem instance);
    partial void DeleteVrem(Vrem instance);
    partial void InsertChain(Chain instance);
    partial void UpdateChain(Chain instance);
    partial void DeleteChain(Chain instance);
    partial void InsertReverseChain(ReverseChain instance);
    partial void UpdateReverseChain(ReverseChain instance);
    partial void DeleteReverseChain(ReverseChain instance);
    partial void InsertTasksToSynthesy(TasksToSynthesy instance);
    partial void UpdateTasksToSynthesy(TasksToSynthesy instance);
    partial void DeleteTasksToSynthesy(TasksToSynthesy instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["OldDb"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ActionPro> ActionPros
		{
			get
			{
				return this.GetTable<ActionPro>();
			}
		}
		
		public System.Data.Linq.Table<Action> Actions
		{
			get
			{
				return this.GetTable<Action>();
			}
		}
		
		public System.Data.Linq.Table<ActionSpec> ActionSpecs
		{
			get
			{
				return this.GetTable<ActionSpec>();
			}
		}
		
		public System.Data.Linq.Table<ActionType> ActionTypes
		{
			get
			{
				return this.GetTable<ActionType>();
			}
		}
		
		public System.Data.Linq.Table<ActionVrem> ActionVrems
		{
			get
			{
				return this.GetTable<ActionVrem>();
			}
		}
		
		public System.Data.Linq.Table<AllAction> AllActions
		{
			get
			{
				return this.GetTable<AllAction>();
			}
		}
		
		public System.Data.Linq.Table<FEAction> FEActions
		{
			get
			{
				return this.GetTable<FEAction>();
			}
		}
		
		public System.Data.Linq.Table<FEIndex> FEIndexes
		{
			get
			{
				return this.GetTable<FEIndex>();
			}
		}
		
		public System.Data.Linq.Table<FEObject> FEObjects
		{
			get
			{
				return this.GetTable<FEObject>();
			}
		}
		
		public System.Data.Linq.Table<FEText> FETexts
		{
			get
			{
				return this.GetTable<FEText>();
			}
		}
		
		public System.Data.Linq.Table<FizVel> FizVels
		{
			get
			{
				return this.GetTable<FizVel>();
			}
		}
		
		public System.Data.Linq.Table<NewFEIndex> NewFEIndexes
		{
			get
			{
				return this.GetTable<NewFEIndex>();
			}
		}
		
		public System.Data.Linq.Table<NeZakon> NeZakons
		{
			get
			{
				return this.GetTable<NeZakon>();
			}
		}
		
		public System.Data.Linq.Table<Pro> Pros
		{
			get
			{
				return this.GetTable<Pro>();
			}
		}
		
		public System.Data.Linq.Table<Spec> Specs
		{
			get
			{
				return this.GetTable<Spec>();
			}
		}
		
		public System.Data.Linq.Table<The> Thes
		{
			get
			{
				return this.GetTable<The>();
			}
		}
		
		public System.Data.Linq.Table<ThesChild> ThesChilds
		{
			get
			{
				return this.GetTable<ThesChild>();
			}
		}
		
		public System.Data.Linq.Table<Vrem> Vrems
		{
			get
			{
				return this.GetTable<Vrem>();
			}
		}
		
		public System.Data.Linq.Table<Chain> Chains
		{
			get
			{
				return this.GetTable<Chain>();
			}
		}
		
		public System.Data.Linq.Table<ReverseChain> ReverseChains
		{
			get
			{
				return this.GetTable<ReverseChain>();
			}
		}
		
		public System.Data.Linq.Table<TasksToSynthesy> TasksToSynthesies
		{
			get
			{
				return this.GetTable<TasksToSynthesy>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActionPros")]
	public partial class ActionPro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _actionId;
		
		private string _prosId;
		
		private EntityRef<Action> _Action;
		
		private EntityRef<Pro> _Pro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnactionIdChanging(int value);
    partial void OnactionIdChanged();
    partial void OnprosIdChanging(string value);
    partial void OnprosIdChanged();
    #endregion
		
		public ActionPro()
		{
			this._Action = default(EntityRef<Action>);
			this._Pro = default(EntityRef<Pro>);
			OnCreated();
		}
        [Key]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int actionId
		{
			get
			{
				return this._actionId;
			}
			set
			{
				if ((this._actionId != value))
				{
					if (this._Action.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnactionIdChanging(value);
					this.SendPropertyChanging();
					this._actionId = value;
					this.SendPropertyChanged("actionId");
					this.OnactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prosId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string prosId
		{
			get
			{
				return this._prosId;
			}
			set
			{
				if ((this._prosId != value))
				{
					if (this._Pro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprosIdChanging(value);
					this.SendPropertyChanging();
					this._prosId = value;
					this.SendPropertyChanged("prosId");
					this.OnprosIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Action_ActionPro", Storage="_Action", ThisKey="actionId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Action Action
		{
			get
			{
				return this._Action.Entity;
			}
			set
			{
				Action previousValue = this._Action.Entity;
				if (((previousValue != value) 
							|| (this._Action.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Action.Entity = null;
						previousValue.ActionPros.Remove(this);
					}
					this._Action.Entity = value;
					if ((value != null))
					{
						value.ActionPros.Add(this);
						this._actionId = value.id;
					}
					else
					{
						this._actionId = default(int);
					}
					this.SendPropertyChanged("Action");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pro_ActionPro", Storage="_Pro", ThisKey="prosId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Pro Pro
		{
			get
			{
				return this._Pro.Entity;
			}
			set
			{
				Pro previousValue = this._Pro.Entity;
				if (((previousValue != value) 
							|| (this._Pro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pro.Entity = null;
						previousValue.ActionPros.Remove(this);
					}
					this._Pro.Entity = value;
					if ((value != null))
					{
						value.ActionPros.Add(this);
						this._prosId = value.id;
					}
					else
					{
						this._prosId = default(string);
					}
					this.SendPropertyChanged("Pro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Actions")]
	public partial class Action : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _actionId;
		
		private string _actionType;
		
		private string _fizVelId;
		
		private EntitySet<ActionPro> _ActionPros;
		
		private EntitySet<ActionSpec> _ActionSpecs;
		
		private EntitySet<ActionVrem> _ActionVrems;
		
		private EntityRef<ActionType> _ActionType1;
		
		private EntityRef<AllAction> _AllAction;
		
		private EntityRef<FizVel> _FizVel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnactionIdChanging(string value);
    partial void OnactionIdChanged();
    partial void OnactionTypeChanging(string value);
    partial void OnactionTypeChanged();
    partial void OnfizVelIdChanging(string value);
    partial void OnfizVelIdChanged();
    #endregion
		
		public Action()
		{
			this._ActionPros = new EntitySet<ActionPro>(new Action<ActionPro>(this.attach_ActionPros), new Action<ActionPro>(this.detach_ActionPros));
			this._ActionSpecs = new EntitySet<ActionSpec>(new Action<ActionSpec>(this.attach_ActionSpecs), new Action<ActionSpec>(this.detach_ActionSpecs));
			this._ActionVrems = new EntitySet<ActionVrem>(new Action<ActionVrem>(this.attach_ActionVrems), new Action<ActionVrem>(this.detach_ActionVrems));
			this._ActionType1 = default(EntityRef<ActionType>);
			this._AllAction = default(EntityRef<AllAction>);
			this._FizVel = default(EntityRef<FizVel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actionId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string actionId
		{
			get
			{
				return this._actionId;
			}
			set
			{
				if ((this._actionId != value))
				{
					if (this._AllAction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnactionIdChanging(value);
					this.SendPropertyChanging();
					this._actionId = value;
					this.SendPropertyChanged("actionId");
					this.OnactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actionType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string actionType
		{
			get
			{
				return this._actionType;
			}
			set
			{
				if ((this._actionType != value))
				{
					if (this._ActionType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnactionTypeChanging(value);
					this.SendPropertyChanging();
					this._actionType = value;
					this.SendPropertyChanged("actionType");
					this.OnactionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fizVelId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fizVelId
		{
			get
			{
				return this._fizVelId;
			}
			set
			{
				if ((this._fizVelId != value))
				{
					if (this._FizVel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfizVelIdChanging(value);
					this.SendPropertyChanging();
					this._fizVelId = value;
					this.SendPropertyChanged("fizVelId");
					this.OnfizVelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Action_ActionPro", Storage="_ActionPros", ThisKey="id", OtherKey="actionId")]
		public EntitySet<ActionPro> ActionPros
		{
			get
			{
				return this._ActionPros;
			}
			set
			{
				this._ActionPros.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Action_ActionSpec", Storage="_ActionSpecs", ThisKey="id", OtherKey="actionId")]
		public EntitySet<ActionSpec> ActionSpecs
		{
			get
			{
				return this._ActionSpecs;
			}
			set
			{
				this._ActionSpecs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Action_ActionVrem", Storage="_ActionVrems", ThisKey="id", OtherKey="actionId")]
		public EntitySet<ActionVrem> ActionVrems
		{
			get
			{
				return this._ActionVrems;
			}
			set
			{
				this._ActionVrems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActionType_Action", Storage="_ActionType1", ThisKey="actionType", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ActionType ActionType1
		{
			get
			{
				return this._ActionType1.Entity;
			}
			set
			{
				ActionType previousValue = this._ActionType1.Entity;
				if (((previousValue != value) 
							|| (this._ActionType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActionType1.Entity = null;
						previousValue.Actions.Remove(this);
					}
					this._ActionType1.Entity = value;
					if ((value != null))
					{
						value.Actions.Add(this);
						this._actionType = value.id;
					}
					else
					{
						this._actionType = default(string);
					}
					this.SendPropertyChanged("ActionType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllAction_Action", Storage="_AllAction", ThisKey="actionId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AllAction AllAction
		{
			get
			{
				return this._AllAction.Entity;
			}
			set
			{
				AllAction previousValue = this._AllAction.Entity;
				if (((previousValue != value) 
							|| (this._AllAction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllAction.Entity = null;
						previousValue.Actions.Remove(this);
					}
					this._AllAction.Entity = value;
					if ((value != null))
					{
						value.Actions.Add(this);
						this._actionId = value.id;
					}
					else
					{
						this._actionId = default(string);
					}
					this.SendPropertyChanged("AllAction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FizVel_Action", Storage="_FizVel", ThisKey="fizVelId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FizVel FizVel
		{
			get
			{
				return this._FizVel.Entity;
			}
			set
			{
				FizVel previousValue = this._FizVel.Entity;
				if (((previousValue != value) 
							|| (this._FizVel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FizVel.Entity = null;
						previousValue.Actions.Remove(this);
					}
					this._FizVel.Entity = value;
					if ((value != null))
					{
						value.Actions.Add(this);
						this._fizVelId = value.id;
					}
					else
					{
						this._fizVelId = default(string);
					}
					this.SendPropertyChanged("FizVel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActionPros(ActionPro entity)
		{
			this.SendPropertyChanging();
			entity.Action = this;
		}
		
		private void detach_ActionPros(ActionPro entity)
		{
			this.SendPropertyChanging();
			entity.Action = null;
		}
		
		private void attach_ActionSpecs(ActionSpec entity)
		{
			this.SendPropertyChanging();
			entity.Action = this;
		}
		
		private void detach_ActionSpecs(ActionSpec entity)
		{
			this.SendPropertyChanging();
			entity.Action = null;
		}
		
		private void attach_ActionVrems(ActionVrem entity)
		{
			this.SendPropertyChanging();
			entity.Action = this;
		}
		
		private void detach_ActionVrems(ActionVrem entity)
		{
			this.SendPropertyChanging();
			entity.Action = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActionSpec")]
	public partial class ActionSpec : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _actionId;
		
		private string _specId;
		
		private EntityRef<Action> _Action;
		
		private EntityRef<Spec> _Spec;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnactionIdChanging(int value);
    partial void OnactionIdChanged();
    partial void OnspecIdChanging(string value);
    partial void OnspecIdChanged();
    #endregion
		
		public ActionSpec()
		{
			this._Action = default(EntityRef<Action>);
			this._Spec = default(EntityRef<Spec>);
			OnCreated();
		}
		
        [Key]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int actionId
		{
			get
			{
				return this._actionId;
			}
			set
			{
				if ((this._actionId != value))
				{
					if (this._Action.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnactionIdChanging(value);
					this.SendPropertyChanging();
					this._actionId = value;
					this.SendPropertyChanged("actionId");
					this.OnactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string specId
		{
			get
			{
				return this._specId;
			}
			set
			{
				if ((this._specId != value))
				{
					if (this._Spec.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnspecIdChanging(value);
					this.SendPropertyChanging();
					this._specId = value;
					this.SendPropertyChanged("specId");
					this.OnspecIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Action_ActionSpec", Storage="_Action", ThisKey="actionId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Action Action
		{
			get
			{
				return this._Action.Entity;
			}
			set
			{
				Action previousValue = this._Action.Entity;
				if (((previousValue != value) 
							|| (this._Action.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Action.Entity = null;
						previousValue.ActionSpecs.Remove(this);
					}
					this._Action.Entity = value;
					if ((value != null))
					{
						value.ActionSpecs.Add(this);
						this._actionId = value.id;
					}
					else
					{
						this._actionId = default(int);
					}
					this.SendPropertyChanged("Action");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Spec_ActionSpec", Storage="_Spec", ThisKey="specId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Spec Spec
		{
			get
			{
				return this._Spec.Entity;
			}
			set
			{
				Spec previousValue = this._Spec.Entity;
				if (((previousValue != value) 
							|| (this._Spec.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Spec.Entity = null;
						previousValue.ActionSpecs.Remove(this);
					}
					this._Spec.Entity = value;
					if ((value != null))
					{
						value.ActionSpecs.Add(this);
						this._specId = value.id;
					}
					else
					{
						this._specId = default(string);
					}
					this.SendPropertyChanged("Spec");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActionTypes")]
	public partial class ActionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private string _parent;
		
		private EntitySet<Action> _Actions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnparentChanging(string value);
    partial void OnparentChanged();
    #endregion
		
		public ActionType()
		{
			this._Actions = new EntitySet<Action>(new Action<Action>(this.attach_Actions), new Action<Action>(this.detach_Actions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(80)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent", DbType="NVarChar(50)")]
		public string parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if ((this._parent != value))
				{
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActionType_Action", Storage="_Actions", ThisKey="id", OtherKey="actionType")]
		public EntitySet<Action> Actions
		{
			get
			{
				return this._Actions;
			}
			set
			{
				this._Actions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Actions(Action entity)
		{
			this.SendPropertyChanging();
			entity.ActionType1 = this;
		}
		
		private void detach_Actions(Action entity)
		{
			this.SendPropertyChanging();
			entity.ActionType1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActionVrem")]
	public partial class ActionVrem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _actionId;
		
		private string _vremId;
		
		private EntityRef<Action> _Action;
		
		private EntityRef<Vrem> _Vrem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnactionIdChanging(int value);
    partial void OnactionIdChanged();
    partial void OnvremIdChanging(string value);
    partial void OnvremIdChanged();
    #endregion
		
		public ActionVrem()
		{
			this._Action = default(EntityRef<Action>);
			this._Vrem = default(EntityRef<Vrem>);
			OnCreated();
		}

        [Key]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int actionId
		{
			get
			{
				return this._actionId;
			}
			set
			{
				if ((this._actionId != value))
				{
					if (this._Action.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnactionIdChanging(value);
					this.SendPropertyChanging();
					this._actionId = value;
					this.SendPropertyChanged("actionId");
					this.OnactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vremId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string vremId
		{
			get
			{
				return this._vremId;
			}
			set
			{
				if ((this._vremId != value))
				{
					if (this._Vrem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnvremIdChanging(value);
					this.SendPropertyChanging();
					this._vremId = value;
					this.SendPropertyChanged("vremId");
					this.OnvremIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Action_ActionVrem", Storage="_Action", ThisKey="actionId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Action Action
		{
			get
			{
				return this._Action.Entity;
			}
			set
			{
				Action previousValue = this._Action.Entity;
				if (((previousValue != value) 
							|| (this._Action.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Action.Entity = null;
						previousValue.ActionVrems.Remove(this);
					}
					this._Action.Entity = value;
					if ((value != null))
					{
						value.ActionVrems.Add(this);
						this._actionId = value.id;
					}
					else
					{
						this._actionId = default(int);
					}
					this.SendPropertyChanged("Action");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vrem_ActionVrem", Storage="_Vrem", ThisKey="vremId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Vrem Vrem
		{
			get
			{
				return this._Vrem.Entity;
			}
			set
			{
				Vrem previousValue = this._Vrem.Entity;
				if (((previousValue != value) 
							|| (this._Vrem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vrem.Entity = null;
						previousValue.ActionVrems.Remove(this);
					}
					this._Vrem.Entity = value;
					if ((value != null))
					{
						value.ActionVrems.Add(this);
						this._vremId = value.id;
					}
					else
					{
						this._vremId = default(string);
					}
					this.SendPropertyChanged("Vrem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllActions")]
	public partial class AllAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private string _parent;
		
		private EntitySet<Action> _Actions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnparentChanging(string value);
    partial void OnparentChanged();
    #endregion
		
		public AllAction()
		{
			this._Actions = new EntitySet<Action>(new Action<Action>(this.attach_Actions), new Action<Action>(this.detach_Actions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(80)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent", DbType="NVarChar(50)")]
		public string parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if ((this._parent != value))
				{
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllAction_Action", Storage="_Actions", ThisKey="id", OtherKey="actionId")]
		public EntitySet<Action> Actions
		{
			get
			{
				return this._Actions;
			}
			set
			{
				this._Actions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Actions(Action entity)
		{
			this.SendPropertyChanging();
			entity.AllAction = this;
		}
		
		private void detach_Actions(Action entity)
		{
			this.SendPropertyChanging();
			entity.AllAction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FEAction")]
	public partial class FEAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idfe;
		
		private int _input;
		
		private string _type;
		
		private string _name;
		
		private string _fizVelId;
		
		private string _fizVelSection;
		
		private string _fizVelChange;
		
		private double _fizVelLeftBorder;
		
		private double _fizVelRightBorder;
		
		private string _pros;
		
		private string _spec;
		
		private string _vrem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidfeChanging(int value);
    partial void OnidfeChanged();
    partial void OninputChanging(int value);
    partial void OninputChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnfizVelIdChanging(string value);
    partial void OnfizVelIdChanged();
    partial void OnfizVelSectionChanging(string value);
    partial void OnfizVelSectionChanged();
    partial void OnfizVelChangeChanging(string value);
    partial void OnfizVelChangeChanged();
    partial void OnfizVelLeftBorderChanging(double value);
    partial void OnfizVelLeftBorderChanged();
    partial void OnfizVelRightBorderChanging(double value);
    partial void OnfizVelRightBorderChanged();
    partial void OnprosChanging(string value);
    partial void OnprosChanged();
    partial void OnspecChanging(string value);
    partial void OnspecChanged();
    partial void OnvremChanging(string value);
    partial void OnvremChanged();
    #endregion
		
		public FEAction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idfe", DbType="Int NOT NULL")]
		public int idfe
		{
			get
			{
				return this._idfe;
			}
			set
			{
				if ((this._idfe != value))
				{
					this.OnidfeChanging(value);
					this.SendPropertyChanging();
					this._idfe = value;
					this.SendPropertyChanged("idfe");
					this.OnidfeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_input", DbType="Int NOT NULL")]
		public int input
		{
			get
			{
				return this._input;
			}
			set
			{
				if ((this._input != value))
				{
					this.OninputChanging(value);
					this.SendPropertyChanging();
					this._input = value;
					this.SendPropertyChanged("input");
					this.OninputChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fizVelId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fizVelId
		{
			get
			{
				return this._fizVelId;
			}
			set
			{
				if ((this._fizVelId != value))
				{
					this.OnfizVelIdChanging(value);
					this.SendPropertyChanging();
					this._fizVelId = value;
					this.SendPropertyChanged("fizVelId");
					this.OnfizVelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fizVelSection", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fizVelSection
		{
			get
			{
				return this._fizVelSection;
			}
			set
			{
				if ((this._fizVelSection != value))
				{
					this.OnfizVelSectionChanging(value);
					this.SendPropertyChanging();
					this._fizVelSection = value;
					this.SendPropertyChanged("fizVelSection");
					this.OnfizVelSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fizVelChange", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fizVelChange
		{
			get
			{
				return this._fizVelChange;
			}
			set
			{
				if ((this._fizVelChange != value))
				{
					this.OnfizVelChangeChanging(value);
					this.SendPropertyChanging();
					this._fizVelChange = value;
					this.SendPropertyChanged("fizVelChange");
					this.OnfizVelChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fizVelLeftBorder", DbType="Float NOT NULL")]
		public double fizVelLeftBorder
		{
			get
			{
				return this._fizVelLeftBorder;
			}
			set
			{
				if ((this._fizVelLeftBorder != value))
				{
					this.OnfizVelLeftBorderChanging(value);
					this.SendPropertyChanging();
					this._fizVelLeftBorder = value;
					this.SendPropertyChanged("fizVelLeftBorder");
					this.OnfizVelLeftBorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fizVelRightBorder", DbType="Float NOT NULL")]
		public double fizVelRightBorder
		{
			get
			{
				return this._fizVelRightBorder;
			}
			set
			{
				if ((this._fizVelRightBorder != value))
				{
					this.OnfizVelRightBorderChanging(value);
					this.SendPropertyChanging();
					this._fizVelRightBorder = value;
					this.SendPropertyChanged("fizVelRightBorder");
					this.OnfizVelRightBorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pros", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string pros
		{
			get
			{
				return this._pros;
			}
			set
			{
				if ((this._pros != value))
				{
					this.OnprosChanging(value);
					this.SendPropertyChanging();
					this._pros = value;
					this.SendPropertyChanged("pros");
					this.OnprosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spec", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string spec
		{
			get
			{
				return this._spec;
			}
			set
			{
				if ((this._spec != value))
				{
					this.OnspecChanging(value);
					this.SendPropertyChanging();
					this._spec = value;
					this.SendPropertyChanged("spec");
					this.OnspecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vrem", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string vrem
		{
			get
			{
				return this._vrem;
			}
			set
			{
				if ((this._vrem != value))
				{
					this.OnvremChanging(value);
					this.SendPropertyChanging();
					this._vrem = value;
					this.SendPropertyChanged("vrem");
					this.OnvremChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FEIndex")]
	public partial class FEIndex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDFE;
		
		private string _Index;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFEChanging(int value);
    partial void OnIDFEChanged();
    partial void OnIndexChanging(string value);
    partial void OnIndexChanged();
    #endregion
		
		public FEIndex()
		{
			OnCreated();
		}

        [Key]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFE", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDFE
		{
			get
			{
				return this._IDFE;
			}
			set
			{
				if ((this._IDFE != value))
				{
					this.OnIDFEChanging(value);
					this.SendPropertyChanging();
					this._IDFE = value;
					this.SendPropertyChanged("IDFE");
					this.OnIDFEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Index]", Storage="_Index", DbType="NVarChar(MAX)")]
		public string Index
		{
			get
			{
				return this._Index;
			}
			set
			{
				if ((this._Index != value))
				{
					this.OnIndexChanging(value);
					this.SendPropertyChanging();
					this._Index = value;
					this.SendPropertyChanged("Index");
					this.OnIndexChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FEObject")]
	public partial class FEObject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idfe;
		
		private int _begin;
		
		private string _phaseState;
		
		private string _composition;
		
		private string _magneticStructure;
		
		private string _conductivity;
		
		private string _mechanicalState;
		
		private string _opticalState;
		
		private string _special;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidfeChanging(int value);
    partial void OnidfeChanged();
    partial void OnbeginChanging(int value);
    partial void OnbeginChanged();
    partial void OnphaseStateChanging(string value);
    partial void OnphaseStateChanged();
    partial void OncompositionChanging(string value);
    partial void OncompositionChanged();
    partial void OnmagneticStructureChanging(string value);
    partial void OnmagneticStructureChanged();
    partial void OnconductivityChanging(string value);
    partial void OnconductivityChanged();
    partial void OnmechanicalStateChanging(string value);
    partial void OnmechanicalStateChanged();
    partial void OnopticalStateChanging(string value);
    partial void OnopticalStateChanged();
    partial void OnspecialChanging(string value);
    partial void OnspecialChanged();
    #endregion
		
		public FEObject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idfe", DbType="Int NOT NULL")]
		public int idfe
		{
			get
			{
				return this._idfe;
			}
			set
			{
				if ((this._idfe != value))
				{
					this.OnidfeChanging(value);
					this.SendPropertyChanging();
					this._idfe = value;
					this.SendPropertyChanged("idfe");
					this.OnidfeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[begin]", Storage="_begin", DbType="Int NOT NULL")]
		public int begin
		{
			get
			{
				return this._begin;
			}
			set
			{
				if ((this._begin != value))
				{
					this.OnbeginChanging(value);
					this.SendPropertyChanging();
					this._begin = value;
					this.SendPropertyChanged("begin");
					this.OnbeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phaseState", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string phaseState
		{
			get
			{
				return this._phaseState;
			}
			set
			{
				if ((this._phaseState != value))
				{
					this.OnphaseStateChanging(value);
					this.SendPropertyChanging();
					this._phaseState = value;
					this.SendPropertyChanged("phaseState");
					this.OnphaseStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_composition", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string composition
		{
			get
			{
				return this._composition;
			}
			set
			{
				if ((this._composition != value))
				{
					this.OncompositionChanging(value);
					this.SendPropertyChanging();
					this._composition = value;
					this.SendPropertyChanged("composition");
					this.OncompositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_magneticStructure", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string magneticStructure
		{
			get
			{
				return this._magneticStructure;
			}
			set
			{
				if ((this._magneticStructure != value))
				{
					this.OnmagneticStructureChanging(value);
					this.SendPropertyChanging();
					this._magneticStructure = value;
					this.SendPropertyChanged("magneticStructure");
					this.OnmagneticStructureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conductivity", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string conductivity
		{
			get
			{
				return this._conductivity;
			}
			set
			{
				if ((this._conductivity != value))
				{
					this.OnconductivityChanging(value);
					this.SendPropertyChanging();
					this._conductivity = value;
					this.SendPropertyChanged("conductivity");
					this.OnconductivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mechanicalState", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string mechanicalState
		{
			get
			{
				return this._mechanicalState;
			}
			set
			{
				if ((this._mechanicalState != value))
				{
					this.OnmechanicalStateChanging(value);
					this.SendPropertyChanging();
					this._mechanicalState = value;
					this.SendPropertyChanged("mechanicalState");
					this.OnmechanicalStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opticalState", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string opticalState
		{
			get
			{
				return this._opticalState;
			}
			set
			{
				if ((this._opticalState != value))
				{
					this.OnopticalStateChanging(value);
					this.SendPropertyChanging();
					this._opticalState = value;
					this.SendPropertyChanged("opticalState");
					this.OnopticalStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_special", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string special
		{
			get
			{
				return this._special;
			}
			set
			{
				if ((this._special != value))
				{
					this.OnspecialChanging(value);
					this.SendPropertyChanging();
					this._special = value;
					this.SendPropertyChanged("special");
					this.OnspecialChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FEText")]
	public partial class FEText : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDFE;
		
		private string _name;
		
		private string _text;
		
		private string _textInp;
		
		private string _textOut;
		
		private string _textObj;
		
		private string _textApp;
		
		private string _textLit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFEChanging(int value);
    partial void OnIDFEChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OntextInpChanging(string value);
    partial void OntextInpChanged();
    partial void OntextOutChanging(string value);
    partial void OntextOutChanged();
    partial void OntextObjChanging(string value);
    partial void OntextObjChanged();
    partial void OntextAppChanging(string value);
    partial void OntextAppChanged();
    partial void OntextLitChanging(string value);
    partial void OntextLitChanged();
    #endregion
		
		public FEText()
		{
			OnCreated();
		}
		[Key]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFE", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDFE
		{
			get
			{
				return this._IDFE;
			}
			set
			{
				if ((this._IDFE != value))
				{
					this.OnIDFEChanging(value);
					this.SendPropertyChanging();
					this._IDFE = value;
					this.SendPropertyChanged("IDFE");
					this.OnIDFEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="NVarChar(MAX)")]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_textInp", DbType="NVarChar(MAX)")]
		public string textInp
		{
			get
			{
				return this._textInp;
			}
			set
			{
				if ((this._textInp != value))
				{
					this.OntextInpChanging(value);
					this.SendPropertyChanging();
					this._textInp = value;
					this.SendPropertyChanged("textInp");
					this.OntextInpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_textOut", DbType="NVarChar(MAX)")]
		public string textOut
		{
			get
			{
				return this._textOut;
			}
			set
			{
				if ((this._textOut != value))
				{
					this.OntextOutChanging(value);
					this.SendPropertyChanging();
					this._textOut = value;
					this.SendPropertyChanged("textOut");
					this.OntextOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_textObj", DbType="NVarChar(MAX)")]
		public string textObj
		{
			get
			{
				return this._textObj;
			}
			set
			{
				if ((this._textObj != value))
				{
					this.OntextObjChanging(value);
					this.SendPropertyChanging();
					this._textObj = value;
					this.SendPropertyChanged("textObj");
					this.OntextObjChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_textApp", DbType="NVarChar(MAX)")]
		public string textApp
		{
			get
			{
				return this._textApp;
			}
			set
			{
				if ((this._textApp != value))
				{
					this.OntextAppChanging(value);
					this.SendPropertyChanging();
					this._textApp = value;
					this.SendPropertyChanged("textApp");
					this.OntextAppChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_textLit", DbType="NVarChar(MAX)")]
		public string textLit
		{
			get
			{
				return this._textLit;
			}
			set
			{
				if ((this._textLit != value))
				{
					this.OntextLitChanging(value);
					this.SendPropertyChanging();
					this._textLit = value;
					this.SendPropertyChanged("textLit");
					this.OntextLitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FizVels")]
	public partial class FizVel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private string _parent;
		
		private EntitySet<Action> _Actions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnparentChanging(string value);
    partial void OnparentChanged();
    #endregion
		
		public FizVel()
		{
			this._Actions = new EntitySet<Action>(new Action<Action>(this.attach_Actions), new Action<Action>(this.detach_Actions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(80)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent", DbType="NVarChar(50)")]
		public string parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if ((this._parent != value))
				{
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FizVel_Action", Storage="_Actions", ThisKey="id", OtherKey="fizVelId")]
		public EntitySet<Action> Actions
		{
			get
			{
				return this._Actions;
			}
			set
			{
				this._Actions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Actions(Action entity)
		{
			this.SendPropertyChanging();
			entity.FizVel = this;
		}
		
		private void detach_Actions(Action entity)
		{
			this.SendPropertyChanging();
			entity.FizVel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewFEIndex")]
	public partial class NewFEIndex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idfe;
		
		private string _input;
		
		private string _output;
		
		private string _beginObjectState;
		
		private string _endObjectState;
		
		private string _beginPhase;
		
		private string _endPhase;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidfeChanging(int value);
    partial void OnidfeChanged();
    partial void OninputChanging(string value);
    partial void OninputChanged();
    partial void OnoutputChanging(string value);
    partial void OnoutputChanged();
    partial void OnbeginObjectStateChanging(string value);
    partial void OnbeginObjectStateChanged();
    partial void OnendObjectStateChanging(string value);
    partial void OnendObjectStateChanged();
    partial void OnbeginPhaseChanging(string value);
    partial void OnbeginPhaseChanged();
    partial void OnendPhaseChanging(string value);
    partial void OnendPhaseChanged();
    #endregion
		
		public NewFEIndex()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idfe", DbType="Int NOT NULL")]
		public int idfe
		{
			get
			{
				return this._idfe;
			}
			set
			{
				if ((this._idfe != value))
				{
					this.OnidfeChanging(value);
					this.SendPropertyChanging();
					this._idfe = value;
					this.SendPropertyChanged("idfe");
					this.OnidfeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_input", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string input
		{
			get
			{
				return this._input;
			}
			set
			{
				if ((this._input != value))
				{
					this.OninputChanging(value);
					this.SendPropertyChanging();
					this._input = value;
					this.SendPropertyChanged("input");
					this.OninputChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_output", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string output
		{
			get
			{
				return this._output;
			}
			set
			{
				if ((this._output != value))
				{
					this.OnoutputChanging(value);
					this.SendPropertyChanging();
					this._output = value;
					this.SendPropertyChanged("output");
					this.OnoutputChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_beginObjectState", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string beginObjectState
		{
			get
			{
				return this._beginObjectState;
			}
			set
			{
				if ((this._beginObjectState != value))
				{
					this.OnbeginObjectStateChanging(value);
					this.SendPropertyChanging();
					this._beginObjectState = value;
					this.SendPropertyChanged("beginObjectState");
					this.OnbeginObjectStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endObjectState", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string endObjectState
		{
			get
			{
				return this._endObjectState;
			}
			set
			{
				if ((this._endObjectState != value))
				{
					this.OnendObjectStateChanging(value);
					this.SendPropertyChanging();
					this._endObjectState = value;
					this.SendPropertyChanged("endObjectState");
					this.OnendObjectStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_beginPhase", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string beginPhase
		{
			get
			{
				return this._beginPhase;
			}
			set
			{
				if ((this._beginPhase != value))
				{
					this.OnbeginPhaseChanging(value);
					this.SendPropertyChanging();
					this._beginPhase = value;
					this.SendPropertyChanged("beginPhase");
					this.OnbeginPhaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endPhase", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string endPhase
		{
			get
			{
				return this._endPhase;
			}
			set
			{
				if ((this._endPhase != value))
				{
					this.OnendPhaseChanging(value);
					this.SendPropertyChanging();
					this._endPhase = value;
					this.SendPropertyChanged("endPhase");
					this.OnendPhaseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NeZakon")]
	public partial class NeZakon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FizVel1;
		
		private string _FizVel2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFizVel1Changing(string value);
    partial void OnFizVel1Changed();
    partial void OnFizVel2Changing(string value);
    partial void OnFizVel2Changed();
    #endregion
		
		public NeZakon()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FizVel1", DbType="NVarChar(50)")]
		public string FizVel1
		{
			get
			{
				return this._FizVel1;
			}
			set
			{
				if ((this._FizVel1 != value))
				{
					this.OnFizVel1Changing(value);
					this.SendPropertyChanging();
					this._FizVel1 = value;
					this.SendPropertyChanged("FizVel1");
					this.OnFizVel1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FizVel2", DbType="NVarChar(50)")]
		public string FizVel2
		{
			get
			{
				return this._FizVel2;
			}
			set
			{
				if ((this._FizVel2 != value))
				{
					this.OnFizVel2Changing(value);
					this.SendPropertyChanging();
					this._FizVel2 = value;
					this.SendPropertyChanged("FizVel2");
					this.OnFizVel2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pros")]
	public partial class Pro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private string _parent;
		
		private EntitySet<ActionPro> _ActionPros;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnparentChanging(string value);
    partial void OnparentChanged();
    #endregion
		
		public Pro()
		{
			this._ActionPros = new EntitySet<ActionPro>(new Action<ActionPro>(this.attach_ActionPros), new Action<ActionPro>(this.detach_ActionPros));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if ((this._parent != value))
				{
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pro_ActionPro", Storage="_ActionPros", ThisKey="id", OtherKey="prosId")]
		public EntitySet<ActionPro> ActionPros
		{
			get
			{
				return this._ActionPros;
			}
			set
			{
				this._ActionPros.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActionPros(ActionPro entity)
		{
			this.SendPropertyChanging();
			entity.Pro = this;
		}
		
		private void detach_ActionPros(ActionPro entity)
		{
			this.SendPropertyChanging();
			entity.Pro = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Spec")]
	public partial class Spec : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private string _parent;
		
		private EntitySet<ActionSpec> _ActionSpecs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnparentChanging(string value);
    partial void OnparentChanged();
    #endregion
		
		public Spec()
		{
			this._ActionSpecs = new EntitySet<ActionSpec>(new Action<ActionSpec>(this.attach_ActionSpecs), new Action<ActionSpec>(this.detach_ActionSpecs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if ((this._parent != value))
				{
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Spec_ActionSpec", Storage="_ActionSpecs", ThisKey="id", OtherKey="specId")]
		public EntitySet<ActionSpec> ActionSpecs
		{
			get
			{
				return this._ActionSpecs;
			}
			set
			{
				this._ActionSpecs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActionSpecs(ActionSpec entity)
		{
			this.SendPropertyChanging();
			entity.Spec = this;
		}
		
		private void detach_ActionSpecs(ActionSpec entity)
		{
			this.SendPropertyChanging();
			entity.Spec = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Thes")]
	public partial class The : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private string _parent;
		
		private string _compatible;
		
		private string _path;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnparentChanging(string value);
    partial void OnparentChanged();
    partial void OncompatibleChanging(string value);
    partial void OncompatibleChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    #endregion
		
		public The()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(80)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent", DbType="NVarChar(50)")]
		public string parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if ((this._parent != value))
				{
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_compatible", DbType="NVarChar(MAX)")]
		public string compatible
		{
			get
			{
				return this._compatible;
			}
			set
			{
				if ((this._compatible != value))
				{
					this.OncompatibleChanging(value);
					this.SendPropertyChanging();
					this._compatible = value;
					this.SendPropertyChanged("compatible");
					this.OncompatibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="NVarChar(MAX)")]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThesChild")]
	public partial class ThesChild : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nodeID;
		
		private string _childID;
		
		private System.Nullable<int> _order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnodeIDChanging(string value);
    partial void OnnodeIDChanged();
    partial void OnchildIDChanging(string value);
    partial void OnchildIDChanged();
    partial void OnorderChanging(System.Nullable<int> value);
    partial void OnorderChanged();
    #endregion
		
		public ThesChild()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nodeID", DbType="NVarChar(50)")]
		public string nodeID
		{
			get
			{
				return this._nodeID;
			}
			set
			{
				if ((this._nodeID != value))
				{
					this.OnnodeIDChanging(value);
					this.SendPropertyChanging();
					this._nodeID = value;
					this.SendPropertyChanged("nodeID");
					this.OnnodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_childID", DbType="NVarChar(50)")]
		public string childID
		{
			get
			{
				return this._childID;
			}
			set
			{
				if ((this._childID != value))
				{
					this.OnchildIDChanging(value);
					this.SendPropertyChanging();
					this._childID = value;
					this.SendPropertyChanged("childID");
					this.OnchildIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[order]", Storage="_order", DbType="Int")]
		public System.Nullable<int> order
		{
			get
			{
				return this._order;
			}
			set
			{
				if ((this._order != value))
				{
					this.OnorderChanging(value);
					this.SendPropertyChanging();
					this._order = value;
					this.SendPropertyChanged("order");
					this.OnorderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vrem")]
	public partial class Vrem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private string _parent;
		
		private EntitySet<ActionVrem> _ActionVrems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnparentChanging(string value);
    partial void OnparentChanged();
    #endregion
		
		public Vrem()
		{
			this._ActionVrems = new EntitySet<ActionVrem>(new Action<ActionVrem>(this.attach_ActionVrems), new Action<ActionVrem>(this.detach_ActionVrems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if ((this._parent != value))
				{
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vrem_ActionVrem", Storage="_ActionVrems", ThisKey="id", OtherKey="vremId")]
		public EntitySet<ActionVrem> ActionVrems
		{
			get
			{
				return this._ActionVrems;
			}
			set
			{
				this._ActionVrems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActionVrems(ActionVrem entity)
		{
			this.SendPropertyChanging();
			entity.Vrem = this;
		}
		
		private void detach_ActionVrems(ActionVrem entity)
		{
			this.SendPropertyChanging();
			entity.Vrem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Chains")]
	public partial class Chain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _chain1;
		
		private int _notClosedInput;
		
		private int _fail;
		
		private int _end;
		
		private int _length;
		
		private string _reverseChainsIds;
		
		private int _task;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onchain1Changing(string value);
    partial void Onchain1Changed();
    partial void OnnotClosedInputChanging(int value);
    partial void OnnotClosedInputChanged();
    partial void OnfailChanging(int value);
    partial void OnfailChanged();
    partial void OnendChanging(int value);
    partial void OnendChanged();
    partial void OnlengthChanging(int value);
    partial void OnlengthChanged();
    partial void OnreverseChainsIdsChanging(string value);
    partial void OnreverseChainsIdsChanged();
    partial void OntaskChanging(int value);
    partial void OntaskChanged();
    #endregion
		
		public Chain()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="chain", Storage="_chain1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string chain1
		{
			get
			{
				return this._chain1;
			}
			set
			{
				if ((this._chain1 != value))
				{
					this.Onchain1Changing(value);
					this.SendPropertyChanging();
					this._chain1 = value;
					this.SendPropertyChanged("chain1");
					this.Onchain1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notClosedInput", DbType="Int NOT NULL")]
		public int notClosedInput
		{
			get
			{
				return this._notClosedInput;
			}
			set
			{
				if ((this._notClosedInput != value))
				{
					this.OnnotClosedInputChanging(value);
					this.SendPropertyChanging();
					this._notClosedInput = value;
					this.SendPropertyChanged("notClosedInput");
					this.OnnotClosedInputChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fail", DbType="Int NOT NULL")]
		public int fail
		{
			get
			{
				return this._fail;
			}
			set
			{
				if ((this._fail != value))
				{
					this.OnfailChanging(value);
					this.SendPropertyChanging();
					this._fail = value;
					this.SendPropertyChanged("fail");
					this.OnfailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[end]", Storage="_end", DbType="Int NOT NULL")]
		public int end
		{
			get
			{
				return this._end;
			}
			set
			{
				if ((this._end != value))
				{
					this.OnendChanging(value);
					this.SendPropertyChanging();
					this._end = value;
					this.SendPropertyChanged("end");
					this.OnendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_length", DbType="Int NOT NULL")]
		public int length
		{
			get
			{
				return this._length;
			}
			set
			{
				if ((this._length != value))
				{
					this.OnlengthChanging(value);
					this.SendPropertyChanging();
					this._length = value;
					this.SendPropertyChanged("length");
					this.OnlengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reverseChainsIds", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string reverseChainsIds
		{
			get
			{
				return this._reverseChainsIds;
			}
			set
			{
				if ((this._reverseChainsIds != value))
				{
					this.OnreverseChainsIdsChanging(value);
					this.SendPropertyChanging();
					this._reverseChainsIds = value;
					this.SendPropertyChanged("reverseChainsIds");
					this.OnreverseChainsIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_task", DbType="Int NOT NULL")]
		public int task
		{
			get
			{
				return this._task;
			}
			set
			{
				if ((this._task != value))
				{
					this.OntaskChanging(value);
					this.SendPropertyChanging();
					this._task = value;
					this.SendPropertyChanged("task");
					this.OntaskChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReverseChains")]
	public partial class ReverseChain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _chain;
		
		private int _fail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnchainChanging(string value);
    partial void OnchainChanged();
    partial void OnfailChanging(int value);
    partial void OnfailChanged();
    #endregion
		
		public ReverseChain()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chain", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string chain
		{
			get
			{
				return this._chain;
			}
			set
			{
				if ((this._chain != value))
				{
					this.OnchainChanging(value);
					this.SendPropertyChanging();
					this._chain = value;
					this.SendPropertyChanged("chain");
					this.OnchainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fail", DbType="Int NOT NULL")]
		public int fail
		{
			get
			{
				return this._fail;
			}
			set
			{
				if ((this._fail != value))
				{
					this.OnfailChanging(value);
					this.SendPropertyChanging();
					this._fail = value;
					this.SendPropertyChanged("fail");
					this.OnfailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TasksToSynthesys")]
	public partial class TasksToSynthesy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _actionId1;
		
		private int _actionId2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnactionId1Changing(int value);
    partial void OnactionId1Changed();
    partial void OnactionId2Changing(int value);
    partial void OnactionId2Changed();
    #endregion
		
		public TasksToSynthesy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actionId1", DbType="Int NOT NULL")]
		public int actionId1
		{
			get
			{
				return this._actionId1;
			}
			set
			{
				if ((this._actionId1 != value))
				{
					this.OnactionId1Changing(value);
					this.SendPropertyChanging();
					this._actionId1 = value;
					this.SendPropertyChanged("actionId1");
					this.OnactionId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actionId2", DbType="Int NOT NULL")]
		public int actionId2
		{
			get
			{
				return this._actionId2;
			}
			set
			{
				if ((this._actionId2 != value))
				{
					this.OnactionId2Changing(value);
					this.SendPropertyChanging();
					this._actionId2 = value;
					this.SendPropertyChanged("actionId2");
					this.OnactionId2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
