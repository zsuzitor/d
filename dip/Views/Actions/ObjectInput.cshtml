@model dip.Models.ViewModel.ActionsV.ObjectInputV




<div>
    <hr />
    @*@Html.DropDownList("nn", @Model.actionId)*@
    @Html.CheckBox("changeObjectCheckbox")
    @Html.Label("Объект изменяется")
    <hr />
    <div id="formPartStartId">
        <h1>Начальное состояние объекта</h1>
        @*@helpers_.PartFormDescrSearch(Html)*@
        @*@Html.Label("1233")*@


        @*@if(ViewBag.inputForm)*@
        @*<input type="hidden" id="parametric_action_or_not" value="@Model.ActionParametricIds" />*@
        <div>
            <div>
                @Html.Action("PartFormStateObject", "Helpers", new { a = Model.StatesStart, type = "S", param = Model.StateStartSelected })
            </div>
            <div>
                @Html.Action("PartFormCharacteristicObject", "Helpers", new { a = Model.CharacteristicsStart, type = "S", param = Model.StateStartSelected })
            </div>
        </div>
    </div>
        <hr />
    @{ 
        string displayEnd = Model.changeStateObject ? "block;" : "none;";
    }
        <div id="formPartEndId" style="display:@displayEnd">
            <h1>Конечное состояние объекта</h1>
            <div>
                <div>
                    @Html.Action("PartFormStateObject", "Helpers", new { a = Model.StatesEnd, type = "E", param = Model.StateEndSelected })
                </div>
                <div>
                    @Html.Action("PartFormCharacteristicObject", "Helpers", new { a = Model.CharacteristicsEnd, type = "E", param = Model.StateEndSelected })
                </div>
            </div>

        </div>
    </div>








<script>

    $(document).on('change', ':radio', function () {//$('input[type=radio][name=bedStatus]')

        switch (this.name) {
            case 'change_state_radio':
                var valSplit = this.value.split('_');
                var formData = {
                    id: valSplit[4],
                    type: valSplit[3]
                };
                goAjaxRequest({
                    url: "/Actions/ChangeStateObject",
                    data: formData,
                    func_success: function (req, status, jqXHR) {
                        var data = req.split('<hr />');//.responseText
                        //var type = data[0].trim();

                        //$('#fizVel').replaceWith(data[1]);
                        document.getElementById('stateChilds_' + valSplit[3] + "_" + valSplit[4]).innerHTML = data[0];
                        document.getElementById('PhaseObject_data_' + valSplit[3] + "_1").innerHTML = data[1];
                        document.getElementById('PhaseObject_data_' + valSplit[3] + "_2").innerHTML = data[2];
                        document.getElementById('PhaseObject_data_' + valSplit[3] + "_3").innerHTML = data[3];
                        
                       

                    }, type: 'POST'
                });

                //скрыть\показать нужные\не нужные фазы
                if (document.getElementById('CountPhase_state_' + valSplit[4])) {

                }
                //goAjaxRequest({
                //    url: "/Actions/GetPhaseObject",
                //    data: formData,
                //    func_success: function (req, status, jqXHR) {
                //        //var data = req.split('<hr />');//.responseText
                //        //var type = data[0].trim();

                //        //$('#fizVel').replaceWith(data[1]);
                //        document.getElementById('stateChilds_' + valSplit[3] + "_" + valSplit[4]).innerHTML = req;




                //    }, type: 'POST'
                //});
                break;


        }
    });

    $(document).on('change', ':checkbox', function () {
        if (this.name == 'change_phase_checbox') {
            //valArr = this.value.split('_');
            loadCheckBoxChildObject(this);
           
        }
        else if (this.name == 'changeObjectCheckbox') {
            if ($(this).prop("checked")) {
                document.getElementById('formPartEndId').style.display = 'block';
            }
            else {
                document.getElementById('formPartEndId').style.display = 'none';
            }
            
        }

    });






    function loadCheckBoxChildObject(ch) {
        var valArr=ch.value.split('_');
        var type = valArr[3]
        var id = valArr[4]
        var div = document.getElementById(("phaseChilds_"+type+"_" + id));

        if (div && !div.innerHTML.trim()) {
            var dataform = {
                id: valArr[4],
                type: valArr[3]
            };

            goAjaxRequest({
                url: "/Actions/GetPhaseObject",
                data: dataform,
                func_success: function (data, status, jqXHR) {

                    //alert(data);
                    if (data.trim())
                        div.innerHTML = data;
                    else
                        div.remove();

                }
            });
        }
        else {
            //уже загружен либо не существует, надо снять чекбоксы при снятии на родителе
            if (div) {
                if (!$(ch).prop("checked")) {
                    //галка снята, снимаем у детей и прячем

                    $('#' + ("phaseChilds_" + type + "_" + id) + ' input:checkbox:checked').each(function () {//[type=checkbox]
                        $(this).removeAttr("checked")
                    });
                    div.style.display = 'none';
                }
                else {
                    div.style.display = 'block';
                }

            }



        }

    }








</script>