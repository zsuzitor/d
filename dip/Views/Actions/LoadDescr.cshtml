@using dip.Models.Domain;
@model dip.Models.ViewModel.ActionsV.LoadDescrV

<div>
    <div>
        <p>Входные</p>
        @for (int i = 1; Model.DictDescrData.ContainsKey("NameI" + i); ++i)
        {
            <label>Вход №@i</label>
            <p>
                <label>Название воздействия:</label>
                <span class="breakWord">@(Model.DictDescrData["NameI"+i])</span>
            </p>
            <p>
                <label>Тип входа:</label>
                <span class="breakWord">@(Model.DictDescrData["TypeI" + i])</span>
            </p>
            if (string.IsNullOrWhiteSpace(Model.DictDescrData["FizVelparamI" + i]))
            {
                <p>
                    <label>Название физической величины:</label>
                    <span class="breakWord">@(Model.DictDescrData["FizVelIdI" + i])</span>
                </p>
                <p>
                    <label>Пространственные характеристики:</label>
                    <span class="breakWord">@(Model.DictDescrData["ProsI" + i])</span>
                </p>
                <p>
                    <label>Специальные характеристики:</label>
                    <span class="breakWord">@(Model.DictDescrData["SpecsI" + i])</span>
                </p>
                <p>
                    <label>Временные характеристики:</label>
                    <span class="breakWord">@(Model.DictDescrData["VremsI" + i])</span>
                </p>
            }
            if (!string.IsNullOrWhiteSpace(Model.DictDescrData["FizVelparamI" + i]))
            {
                <p>
                    <label>Раздел физики:</label>
                    <span class="breakWord">@(Model.DictDescrData["FizVelIdI" + i])</span>
                </p>
                <p>
                    <label>Название физической величины:</label>
                    <span class="breakWord">@(Model.DictDescrData["FizVelparamI" + i])</span>
                </p>
            }
        }
        

    </div>
    <div>
        <p>Выходные</p>

@for (int i = 1; Model.DictDescrData.ContainsKey("NameO" + i); ++i)
{
    <p>
        <label>Название воздействия:</label>
        <span class="breakWord">@(Model.DictDescrData["NameO" + i])</span>
    </p>
        <p>
            <label>Тип входа:</label>
            <span class="breakWord">@(Model.DictDescrData["TypeO" + i])</span>
        </p>
        if (string.IsNullOrWhiteSpace(Model.DictDescrData["FizVelparamO" + i]))
        {
            <p>
                <label>Название физической величины:</label>
                <span class="breakWord">@(Model.DictDescrData["FizVelIdO" + i])</span>
            </p>
            <p>
                <label>Пространственные характеристики:</label>
                <span class="breakWord">@(Model.DictDescrData["ProsO" + i])</span>
            </p>
            <p>
                <label>Специальные характеристики:</label>
                <span class="breakWord">@(Model.DictDescrData["SpecsO" + i])</span>
            </p>
            <p>
                <label>Временные характеристики:</label>
                <span class="breakWord">@(Model.DictDescrData["VremsO" + i])</span>
            </p>
        }
        if (!string.IsNullOrWhiteSpace(Model.DictDescrData["FizVelparamO" + i]))
        {
            <p>
                <label>Раздел физики:</label>
                <span class="breakWord">@(Model.DictDescrData["FizVelIdO" + i])</span>
            </p>
            <p>
                <label>Название физической величины:</label>
                <span class="breakWord">@(Model.DictDescrData["FizVelparamO" + i])</span>
            </p>
        }


}
        


    </div>
    


</div>

<p></p>










