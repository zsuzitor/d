


@model dip.Models.ViewModel.PhysicV.EditV

@{
    ViewBag.Title = "Edit";
}

<script>
    var num_delete_img=0;
    function delete_img(but) {
        var id=but.id.split("_")[1];
        var div = document.getElementById("div_delete_img_id");
        var str = "<input type='hidden' id='one_block_delete_img_id_" + num_delete_img + "' name='deleteImg_[" + num_delete_img++ + "]' value='" + id + "' />";
        div.innerHTML += str;

        //document.getElementById("div_img_show_block_" + id).innerHTML = "<p>Удалено</p>";

        document.getElementById("div_img_hide_block_" + id).style.display = 'none';

        document.getElementById("div_img_reset_block_" + id).style.display = 'block';
    }

    function reset_img(but) {
        var id = but.id.split("_")[1];
        var cur_num = 0;
        var res = "";
        for (var i = 0; i < num_delete_img; ++i) {
            var del = document.getElementById('one_block_delete_img_id_' + i);
            if (del.value != id) {
                res += "<input type='hidden' id='one_block_delete_img_id_" + cur_num + "' name='deleteImg_[" + cur_num++ + "]' value='" + del.value + "' />";
            }

        }
        num_delete_img = cur_num;
        var div = document.getElementById("div_delete_img_id");
        div.innerHTML = res;
        document.getElementById("div_img_hide_block_" + id).style.display = 'block';

        document.getElementById("div_img_reset_block_" + id).style.display = 'none';
        //var del = document.getElementById('one_block_delete_img_id_' + id);
        //del.remove();
        //восстанавливаем
        //var sh = false;
        //var del_cur = document.getElementById('one_block_delete_img_id_' + 1);
        //var del_next = document.getElementById('one_block_delete_img_id_' + 2);
        //for (var i = 1; i < num_delete_img; ++i) {
           
        //    if (sh) {

        //    }
        //    else {

        //    }
        //    if (del.value == id) {
        //        //for (; i < num_delete_img; ++i) {

        //        //}
        //        sh = true;

        //        break;
        //    }
        //    del_cur = del_next;
        //    del_next = document.getElementById('one_block_delete_img_id_' + (i+1));
        //}

    }


    function EditPhysFunc() {

        data_descr_search.function_trigger = function () {



            var divForm = document.getElementById('physEditFormDescrRecDiv');
            var divFormNewInner = '';//'<H1>Отправляем</H1>';
            for (key in data_descr_search) {
                if (key != 'function_trigger' && key != 'search')
                    divFormNewInner += ' <input name="' + key + '" value="' + data_descr_search[key] + '" type="hidden"/>';
            }

            divForm.innerHTML = divFormNewInner;
            //var divImgForm = document.getElementById('physEditFormIMGDiv');
            //divImgForm.style.display = 'none';
            document.getElementById('FormPhysEdit').submit();



        };
        Go_next_step();
    }


</script>




<h2>Edit</h2>
@Html.ActionLink("Вернуться к просмотру", "Details", "Physic", new { id = Model.Obj.IDFE }, new { })
@if(Model== null)
{
    <p>запись не найдена</p>
}
@Html.ValidationSummary()
@if (Model != null)
{

    <div>
        <div >@*id="physEditFormDescrDiv"*@
            @Html.Action("DescriptionInput", "Actions", new { inp = Model.FormsInput, outp = Model.FormsOutput})
        </div>
        @using (Html.BeginForm("Edit", "Physic", FormMethod.Post, new {id= "FormPhysEdit", enctype = "multipart/form-data" }))
        {

            
            <div id="physEditFormDescrRecDiv">

            </div>




            @Html.HiddenFor(x1 => x1.Obj.IDFE)

            <dl class="dl-horizontal">
                <dt>
                    @Html.LabelFor(x1=>x1.Obj.Name)
                </dt>

                <dd>
                    @Html.EditorFor(model => Model.Obj.Name)
                </dd>
                <dt>
                    @Html.LabelFor(x1=>x1.Obj.Text)
                </dt>

                <dd>
                    @Html.EditorFor(model => model.Obj.Text)
                </dd>

                <dt>
                    @Html.LabelFor(x1 => x1.Obj.TextInp)
                </dt>

                <dd>
                    @Html.EditorFor(model => model.Obj.TextInp)
                </dd>

                <dt>
                   @Html.LabelFor(x1 => x1.Obj.TextOut)
                </dt>

                <dd>
                    @Html.EditorFor(model => model.Obj.TextOut)
                </dd>

                <dt>
                    @Html.LabelFor(x1 => x1.Obj.TextObj)
                </dt>

                <dd>
                    @Html.EditorFor(model => model.Obj.TextObj)
                </dd>

                <dt>
                   @Html.LabelFor(x1 => x1.Obj.TextApp)
                </dt>

                <dd>
                    @Html.EditorFor(model => model.Obj.TextApp)
                </dd>

                <dt>
                    @Html.LabelFor(x1 => x1.Obj.TextLit)
                </dt>

                <dd>
                    @Html.EditorFor(model => model.Obj.TextLit)
                </dd>

            </dl>





            <div id="div_delete_img_id">

            </div>


            <div id="physEditFormIMGDiv">
                <input class="btn btn-default" type="file" multiple name="uploadImage" />
            </div>
                @*<input class="btn btn-default" type="submit" value="отправить" />*@
                }
                <input class="btn btn-default" onclick="EditPhysFunc()" value="отправить" />
                <div class="block_images">
                    <div class="inline">
                        @foreach (var i in Model.Obj.Images)
                        {
                            @*<div class="div_img_record_show_block div_inline_block" id="div_img_show_block_@i.Id">
                                    <div class="one_effect_img" style="background:url( data:image/jpeg;base64,@Convert.ToBase64String(i.Data)) no-repeat;background-size: cover;">
                                    </div>
                                    <button id="buttonDeleteId_@i.Id" onclick="delete_img(this)">Удалить</button>
                                </div>*@
                            <div class="div_img_record_show_block div_inline_block" id="div_img_show_block_@i.Id">
                                <div id="div_img_hide_block_@i.Id">
                                    <div class="details_one_image">
                                        @Html.Action("ImageLink", "Helpers", new { a = i })

                                    </div>
                                    <div class="edit_button_image_action">
                                        <button id="buttonDeleteId_@i.Id" class="btn btn-default" onclick="delete_img(this)">Удалить</button>
                                    </div>
                                </div>
                                <div class="edit_button_image_action" id="div_img_reset_block_@i.Id" style="display:none;">
                                    <button id="buttonResetId_@i.Id" class="btn btn-default" onclick="reset_img(this)">Восстановить</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>

            </div>





        }



