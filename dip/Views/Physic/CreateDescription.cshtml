

@model dip.Models.ViewModel.PhysicV.CreateDescriptionV

@{
    ViewBag.Title = "CreateDescription";
}


<h2>CreateDescription</h2>

















<input type="hidden" id="parametric_action_or_not" value="@Model.ActionParametricIds" />
<div class="form-horizontal">
    @*#line1*@
    <button id="changeTypeActionId_but_id" onclick="changeTypeActionId()">Добавить новый</button>
    <div id="create_descr_action_old_div">
        <select name=@("actionId") class="form-control" id=@("action")>

            @foreach (var i in Model.Form.ActionId)
            {
                <option value="@i.Id">@i.Name</option>
            }
        </select>
    </div>

    <div style="display:none;" id="create_descr_action_new_div">

        @*@Html.Editor("actionId_")*@
        @Html.Editor("actionName")
        <input type="checkbox" id="changeTypeParamActionId" @*onchange="changeTypeParamAction()"*@ name="changeTypeParamActionName" value="Параметрическ" />
    </div>

    <hr />









    @*#line2*@


    <div>
        <p>@*по идеи не нужно,*@ нужно вынести как то отдельно, тк не имеет отношения к форме в целом</p>
        <select name=@("actionType") class="form-control" id=@("actionType")>
            @foreach (var i in Model.Form.ActionType)
            {

                <option selected value="@i.Id">@i.Name</option>
            }
        </select>
    </div>
    <hr />








    @*#line3*@
    <button id="changeTypeFizVelId_but_id" onclick="changeTypeFizVelId()">Добавить новые</button>
    <div id="create_descr_FizVel_old_div">
        <div id="fizVelGroup">
            @Html.Action("DescrFormFizVels", "Helpers", new { type = "", fizVelId = Model.Form.FizVelId })




        </div>
    </div>
    <div style="display:none;" id="create_descr_FizVel_new_div">
        <div id="FizVelGroupNew">
            <input class="text-box single-line" id="FizVelName" name="FizVelName" type="text" value="">

        </div>
        <button id="addNewFizVelId_but_id" onclick="addNewFizVelId()">Добавить</button>

    </div>
    <hr />








    @*#line4*@

    <div id="parametricAllBlock">
        <button id="changeTypeParamFizVelId_but_id" onclick="changeTypeParamFizVelId()">Добавить новый</button>
        <div id="create_descr_ParamFizVel_old_div">
            <div>
                @Html.Action("DescrFormParamFizVels", "Helpers", new { type = "", parametricFizVelId = Model.Form.ParametricFizVelId })

            </div>
        </div>
        <div style="display:none;" id="create_descr_ParamFizVel_new_div">
            <div id="ParametricFizVelGroupNew">

                <input class="text-box single-line" id="ParamFizVelName" name="ParamFizVelName" type="text" value="">
            </div>
            <button id="addNewParametricFizVelId_but_id" onclick="addNewParametricFizVelId()">Добавить</button>

        </div>
    </div>

    <hr />







    @*#line checkboxes*@
    <div id="div_all_checkboxes">
    @*#line5*@
    <div>
        <div id="prosGroup">
            @Html.Action("DescrFormProsEdit", "Helpers", new { pros = Model.Form.Pros, parentId=Model.Form.CurrentAction })
        </div>








    </div>



    <hr />








    @*#line6*@


        <div>
            <div id="specGroup">
                @Html.Action("DescrFormSpecEdit", "Helpers", new { specs = Model.Form.Specs, parentId = Model.Form.CurrentAction })
            </div>
            </div>

    <hr />













    @*#line7*@

    <div>
        @*@Html.Action("DescrFormVrem", "Helpers", new { type = "", vrems = Model.Vrems })*@

        <div id="vremGroup">
            @Html.Action("DescrFormVremEdit", "Helpers", new { vrems = Model.Form.Vrems, parentId = Model.Form.CurrentAction })
        </div>
    </div>
</div>

    </div>





















<script>


    var mainObjEdit = {
        newAction: false,
        newFizVel: false,
        newParamFizVel: false,
        maxNewSpecId: 1,
        maxNewProId: 1,
        maxNewVremId: 1

    };




    //прячем
    function ReplaceDisplayNoneNew(newdiv, oldDiv, changeBut) {
        newdiv.style.display = 'none';
        oldDiv.style.display = 'block';
        changeBut.innerHTML = 'Добавить новый';
    }

    function ReplaceDisplayNoneOld(newdiv, oldDiv, changeBut) {
        newdiv.style.display = 'block';
        oldDiv.style.display = 'none';
        changeBut.innerHTML = 'Использовать существущие';
    }






    //flag-1 прячем 2 показываем  newdiv
    function changeTypeActionId(flag) {
        var newdiv = document.getElementById('create_descr_action_new_div');
        var oldDiv = document.getElementById('create_descr_action_old_div');
        var changeBut = document.getElementById('changeTypeActionId_but_id');

        if (!flag)
            if (newdiv.style.display == 'none') {
                mainObjEdit.newAction = true;
                ReplaceDisplayNoneOld(newdiv, oldDiv, changeBut);
                changeTypeFizVelId(2);
                changeTypeParamFizVelId(2);
                if (!document.getElementById('changeTypeParamActionId').checked)
                document.getElementById('parametricAllBlock').style.display='none';

            }
            else {
                mainObjEdit.newAction = false;
                ReplaceDisplayNoneNew(newdiv, oldDiv, changeBut);
                changeTypeFizVelId(1);
                changeTypeParamFizVelId(1);

                document.getElementById('parametricAllBlock').style.display = 'block';
            }
        else {
            if (flag == 1) {
                mainObjEdit.newAction = false;
                ReplaceDisplayNoneNew(newdiv, oldDiv, changeBut);
                changeTypeFizVelId(flag);
                changeTypeParamFizVelId(flag);

                document.getElementById('parametricAllBlock').style.display = 'block';
            }
            if (flag == 2) {
                mainObjEdit.newAction = true;
                ReplaceDisplayNoneOld(newdiv, oldDiv, changeBut);
                changeTypeFizVelId(flag);
                changeTypeParamFizVelId(flag);

                if (!document.getElementById('changeTypeParamActionId').checked)
                document.getElementById('parametricAllBlock').style.display = 'none';

            }
        }




    }

    //flag-1 прячем 2 показываем  newdiv
    function changeTypeFizVelId(flag) {
        var newdiv = document.getElementById('create_descr_FizVel_new_div');
        var oldDiv = document.getElementById('create_descr_FizVel_old_div');
        var changeBut = document.getElementById('changeTypeFizVelId_but_id');

        if (!flag) {
            var oldDivAction = document.getElementById('create_descr_action_old_div');

            if (newdiv.style.display == 'none') {
                if (oldDivAction.style.display != 'none')
                    ReplaceDisplayNoneOld(newdiv, oldDiv, changeBut);

            }
            else {
                if (oldDivAction.style.display != 'none')
                ReplaceDisplayNoneNew(newdiv, oldDiv, changeBut);
            }
        }
        else {
            if (flag == 1) {
                ReplaceDisplayNoneNew(newdiv, oldDiv, changeBut);
            }
            if (flag == 2) {
                ReplaceDisplayNoneOld(newdiv, oldDiv, changeBut);

            }
        }

    }

    //flag-1 прячем 2 показываем  newdiv
    function changeTypeParamFizVelId(flag) {
        var newdiv = document.getElementById('create_descr_ParamFizVel_new_div');
        var oldDiv = document.getElementById('create_descr_ParamFizVel_old_div');
        var changeBut = document.getElementById('changeTypeParamFizVelId_but_id');


        var id = $('#fizVelId').val();



        var checkParametrics = document.getElementById('parametric_action_or_not').value.split(' ');
        var actionId = document.getElementById('action');
        if (!flag) {
            var oldDivAction = document.getElementById('create_descr_action_old_div');
            for (var i = 0; i < checkParametrics.length; ++i) {

                if (checkParametrics[i] == actionId.value) {
                    if (newdiv.style.display == 'none') {
                        if (oldDivAction.style.display != 'none')// || document.getElementById('changeTypeParamActionId').checked
                        ReplaceDisplayNoneOld(newdiv, oldDiv, changeBut);

                    }
                    else {
                        if (oldDivAction.style.display != 'none')//|| document.getElementById('changeTypeParamActionId').checked
                        ReplaceDisplayNoneNew(newdiv, oldDiv, changeBut);
                    }
                    break;
                }


            }
        }
        else {
            if (flag == 1) {
                ReplaceDisplayNoneNew(newdiv, oldDiv, changeBut);
            }
            if (flag == 2) {
                ReplaceDisplayNoneOld(newdiv, oldDiv, changeBut);

            }

        }
    }



    function addNewFizVelId() {
        var div = document.getElementById('FizVelGroupNew');
        div.innerHTML += '<input class="text-box single-line" id="FizVelName" name="FizVelName" type="text" value="">';
    }

    function addNewParametricFizVelId() {
        var div = document.getElementById('ParametricFizVelGroupNew');
        div.innerHTML += '<input class="text-box single-line" id="ParamFizVelName" name="ParamFizVelName" type="text" value="">';
    }







    function loadCheckBoxChild(ch, meth) {

        var div = document.getElementById((ch.value+"_childs"));

        if (div && !div.innerHTML.trim()) {
            goAjaxRequest({
                url: '/Actions/' + meth + '?id=' + ch.value ,
                func_success: function (data, status, jqXHR) {

                    if (data.trim()) {
                        div.innerHTML = data;
                        loadCheckBoxChild(ch, meth);
                    }
                    else {
                        div.remove();
                    }

                }
            });
        }
        else {
            //уже загружен либо не существует, надо снять чекбоксы при снятии на родителе
            if (div) {
                if (!$(ch).prop("checked")) {
                    //галка снята, снимаем у детей и прячем

                    $('#' + ch.value  + ' input:checkbox:checked').each(function () {//[type=checkbox]
                        $(this).removeAttr("checked")
                    });
                    document.getElementById(ch.value ).style.display = 'none';
                }
                else {
                    document.getElementById(ch.value ).style.display = 'block';
                }

            }



        }

    }









    function changeParams() {

        var prefix = '/Actions/';

        // Получаем дескриптор воздействия
        var id = $('#action').val();




        var formData = {
            fizVelId: id,

        };


        goAjaxRequest({
            url: prefix + "ChangeActionEdit",
            data: formData,
            func_success: function (req, status, jqXHR) {
                var data = req.split('<hr />');//.responseText
                //var type = data[0].trim();
                $('#fizVel' ).replaceWith(data[1]);



                document.getElementById('prosGroup' ).innerHTML = data[2];


                document.getElementById('specGroup' ).innerHTML = data[3];


                document.getElementById('vremGroup' ).innerHTML = data[4];

                $('#parametricFizVel').replaceWith(data[5]);


            }, type: 'POST'
        });

    };



    function changeFizVel() {

        var prefix = '/Actions/';

        //var postfix = '?type=' + type;

        var id = $('#fizVelId').val();
        //TODO надо изменить на НЕ хардкод
        //if (id == 'VOZ11_FIZVEL_R1' || id == 'VOZ11_FIZVEL_R2' || // задано параметрическое воздействие
        //    id == 'VOZ11_FIZVEL_R3' || id == 'VOZ11_FIZVEL_R4' ||
        //    id == 'VOZ11_FIZVEL_R5')
        //var checkParametric = document.getElementById('parametric_action_or_not');


        var checkParametrics = document.getElementById('parametric_action_or_not').value.split(' ');
        var actionId = document.getElementById('action');
        for (var i = 0; i < checkParametrics.length; ++i) {
            if (checkParametrics[i] == actionId.value) {
                goAjaxRequest({
                    url: prefix + 'GetParametricFizVels/' + id ,
                    func_success: function (data, status, jqXHR) {
                        // Заменяем часть представления, отвечающего за выбор физической величины
                        $('#parametricFizVel').replaceWith(data);
                    }
                });
                break;
            }

        }


    };







    $(document).on('change', ':checkbox', function () {

        switch(this.name){
            case 'listSelectedPros':
                loadCheckBoxChild(this, 'GetProsChildEdit');
                break;

            case 'listSelectedSpecs':
                loadCheckBoxChild(this, 'GetSpecChildEdit');
                break;

            case 'listSelectedVrems':
                loadCheckBoxChild(this, 'GetVremChildEdit');
                break;

            case 'changeTypeParamActionName':
                if (this.checked){
                    document.getElementById('parametricAllBlock').style.display = 'block';
                    document.getElementById('div_all_checkboxes').style.display = 'none';

                }
                else {
                    document.getElementById('parametricAllBlock').style.display = 'none';
                    document.getElementById('div_all_checkboxes').style.display = 'block';

                }
                break;

            case 'listSelectedProsNew':
                document.getElementById(this.value+'_childs').innerHTML=' <div class="form-group descrCheckBoxChild"> \
           <div class="col-md-10" id="'+this.value+'_PROS)"> </div>\
           <div class="col-md-10">\
               <button onclick="addNewPro("'+this.value+'_PROS")">Добавить</button>\
           </div>\
       </div>';


                break;


            case 'listSelectedVremsNew':

                document.getElementById(this.value + '_childs').innerHTML = ' <div class="form-group descrCheckBoxChild"> \
           <div class="col-md-10" id="'+ this.value + '_Vrem)"> </div>\
           <div class="col-md-10">\
               <button onclick="addNewVrem("' + this.value + '_Vrem")">Добавить</button>\
           </div>\
       </div>';


                break;


            case 'listSelectedSpecsNew':
                document.getElementById(this.value + '_childs').innerHTML = ' <div class="form-group descrCheckBoxChild"> \
           <div class="col-md-10" id="'+ this.value + '_SPEC)"> </div>\
           <div class="col-md-10">\
               <button onclick="addNewSpec("' + this.value + '_SPEC")">Добавить</button>\
           </div>\
       </div>';
                break;
        }


    });





    function addNewPro(id) {
        var div = document.getElementById(id + '_PROS');
        var strCur = id + '_PROS' + (mainObjEdit.maxNewProId++);
        div.innerHTML += '<div><input value="' + strCur + '" class="checkBoxClass" name="listSelectedProsNew" type="checkbox"/><input id="'
            + strCur + '" type="text" id="' + div.id + '_input' + '" /><div id="' + strCur + '_childs"></div></div>';

    }
    function addNewSpec(id) {
        var div = document.getElementById(id + '_SPEC');
        var strCur = id + '_SPEC' + (mainObjEdit.maxNewSpecId++);
        div.innerHTML += '<div><input value="' + strCur + '" class="checkBoxClass" name="listSelectedSpecsNew" type="checkbox"/><input id="'
            + strCur + '"  type="text" id="' + div.id + '_input' + '" /><div id="' + strCur + '_childs"></div></div>';
    }
    function addNewVrem(id) {
        var div = document.getElementById(id + '_VREM');
        var strCur = id + '_VREM' + (mainObjEdit.maxNewVremId++);
        div.innerHTML += '<div><input value="' + strCur + '" class="checkBoxClass" name="listSelectedVremsNew" type="checkbox"/><input id="'
            + strCur + '"  type="text" id="' + div.id + '_input' + '" /><div id="' + strCur + '_childs"></div></div>';
    }










    $(document).ready(function () {
        // Назначение на событие change функции changeFizVel
        $('#fizVelGroup').on('change', function () {
            changeFizVel();

        });




        // Назначение на событие change функции changeParams
        $('#action').on('change', function () {
            changeParams();

        });
    });






</script>














