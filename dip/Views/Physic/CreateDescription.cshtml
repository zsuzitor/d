

@model dip.Models.ViewModel.PhysicV.CreateDescriptionV

@{
    ViewBag.Title = "CreateDescription";
}


<h2>CreateDescription</h2>


<h1>Сохранятся только изменения тех элементов которые отображаются на экране на момент нажатия кнопки "сохранить"</h1>
<h1>при удалении родителя, будут удалены(не будут добавлены новые при добавлении) все дети</h1>
<h1>actionId добавится только если он выбран</h1>














<input type="hidden" id="parametric_action_or_not" value="@Model.ActionParametricIds" />
<div class="form-horizontal">
    @*#line1*@
   
    <div id="actionId_all">

        @foreach (var i in Model.Form.ActionId)
            {
            <div class="padding_10_top">
                <input name="actionId" type="radio" value="@i.Id" id="@(i.Id+"_radio")" class="radioClass">
                <button class="btn btn-default" onclick="changeActionId('@i.Id')">Изменить</button>
                <input class="form-control" type="text" value="@i.Name" name="@i.Id" id="@(i.Id+"_inp")" readonly />
            </div>
        }


            </div>

    @*<div style="display:none;" id="create_descr_action_new_div">*@

        @*@Html.Editor("actionId_")*@
    <div class="padding_10_top">
        <input name="actionId" type="radio" value="VOZ0" id="VOZ0_radio" class="radioClass">
        <input type="checkbox" id="changeTypeParamActionId" @*onchange="changeTypeParamAction()"*@ name="changeTypeParamActionName" style="display:none;" title="Параметрическ" class="checkBoxClass"/>@*TODO Параметрическ(?)*@
        <input class="form-control" type="text" value="" name="VOZ0" id="VOZ0_inp" />
        
    </div>
        @*@Html.Editor("actionName")*@
        
    @*</div>*@

    <hr />









    @*#line2*@


    <div style="display:none;">
        <p>@*по идеи не нужно,*@ нужно вынести как то отдельно, тк не имеет отношения к форме в целом</p>
        <select name=@("actionType") class="form-control" id=@("actionType")>
            @*@foreach (var i in Model.Form.ActionType)
            {

                <option selected value="@i.Id">@i.Name</option>
            }*@
        </select>
    </div>
    <hr />








    @*#line3*@
    @*<button id="changeTypeFizVelId_but_id" onclick="changeTypeFizVelId()">Добавить новые</button>*@
    <div  id="fizVelGroup_all" style="display:none;">
        <div id="fizVelGroup">
            <div class="form-group" id="fizVel">
                @*@Html.Action("DescrFormFizVelsEdit", "Helpers", new { fizVelId = Model.Form.FizVelId })*@
            </div>



            </div>
        <button class="btn btn-default" id="addNewFizVelId_but_id" onclick="addNewFizVelId()">Добавить</button>
    </div>
    
 
    
    <hr />








    @*#line4*@

    <div id="parametricBlock_all">
       
        
            <div id="parametricFizVel_all"  style="display:none;">

                <div class="form-group" id="parametricFizVel">
                    @*@Html.Action("DescrFormParamFizVelsEdit", "Helpers", new { parametricFizVelId = Model.Form.ParametricFizVelId })*@
                </div>
                    <button class="btn btn-default" id="addNewParametricFizVelId_but_id" onclick="addNewParametricFizVelId()">Добавить</button>
                </div>
        

    </div>

    <hr />







    @*#line checkboxes*@
    <div id="div_all_checkboxes" style="display:none;">
    @*#line5*@
    <div>
        <div id="prosGroup_all">
            <div id="prosGroup">

            </div>
 
        </div>

        </div>

    <hr />








    @*#line6*@


        <div>
            <div id="specGroup_all">
                <div id="specGroup">
                   
                </div>
               
                </div>
            </div>

    <hr />













    @*#line7*@

    <div>
        @*@Html.Action("DescrFormVrem", "Helpers", new { type = "", vrems = Model.Vrems })*@
        <div id="vremGroup_all">
            <div id="vremGroup">

               
            </div>
           
            </div>
        </div>
</div>


    <button class="btn btn-default" onclick="saveForm()">Сохранить</button>

    </div>





















<script>
    //mainObjEdit.curentActionId
    var mainObjEdit = {
        //newAction: false,
        //newFizVel: false,
        //newParamFizVel: false,
        curentActionId:'',
        parametricAction: false,
        //parametricActionNew: false,

        maxNewFizVelId: 1,
        maxNewParamFizVelId: 1,
        maxNewSpecId: 1,
        maxNewProId: 1,
        maxNewVremId: 1,

        massEditActionId:[],
        massEditFizVels:[],
        massEditParamFizVels:[],
        massEditPros:[],
        massEditVrems:[],
        massEditSpecs:[],

        massDeletedPros:[],
        massDeletedVrems:[],
        massDeletedSpecs:[]

    };



   




    $(document).on('change', ':radio', function () {//$('input[type=radio][name=bedStatus]')
       
        switch (this.name) {
            case 'actionId':
                

                mainObjEdit.curentActionId = this.value;
                var value = this.value;

                if (this.value !== 'VOZ0') {
                    document.getElementById('changeTypeParamActionId').style.display = 'none';

                    var formData = {
                        fizVelId: value,

                    };


                    goAjaxRequest({
                        url: "/Actions/ChangeActionEdit",
                        data: formData,
                        func_success: function (req, status, jqXHR) {
                            var data = req.split('<hr />');//.responseText
                            //var type = data[0].trim();

                            //$('#fizVel').replaceWith(data[1]);
                            document.getElementById('fizVel').innerHTML = data[1];


                            document.getElementById('prosGroup').innerHTML = data[2];


                            document.getElementById('specGroup').innerHTML = data[3];


                            document.getElementById('vremGroup').innerHTML = data[4];

                            document.getElementById('parametricFizVel').innerHTML = data[5];
                            document.getElementById('fizVelGroup_all').style.display = 'block';
                            document.getElementById('parametricFizVel_all').style.display = 'block';
                            document.getElementById('div_all_checkboxes').style.display = 'block';
                            //$('#parametricFizVel').replaceWith(data[5]);
                            //определить тип и спрятать лишнее  //из результата не вытаскивать
                            if (checkParametricAction(value)) {
                                SetParametricalType(true);
                            }
                            else {
                                SetParametricalType(false);

                            }

                        }, type: 'POST'
                    });
                }
                else {//voz0
                    document.getElementById('fizVelGroup_all').style.display = 'block';
                    document.getElementById('parametricFizVel_all').style.display = 'block';
                    document.getElementById('div_all_checkboxes').style.display = 'block';

                    document.getElementById('changeTypeParamActionId').style.display = 'block';
                    document.getElementById('fizVel').innerHTML = '';
                    document.getElementById('parametricFizVel').innerHTML = '';
                    document.getElementById('prosGroup').innerHTML = '<div class="form-group descrCheckBoxChildEdit">' +
                        '<div class="" id=\'VOZ0_PROS\'> </div> <div class=""> <button class="btn btn-default" onclick="addNewPro(\'VOZ0\')">Добавить</button> </div></div>';

                    document.getElementById('specGroup').innerHTML = '<div class="form-group descrCheckBoxChildEdit">' +
                        '<div class="" id=\'VOZ0_SPEC\'> </div> <div class=""> <button class="btn btn-default" onclick="addNewSpec(\'VOZ0\')">Добавить</button> </div></div>';
                    document.getElementById('vremGroup').innerHTML = '<div class="form-group descrCheckBoxChildEdit">' +
                        '<div class="" id=\'VOZ0_VREM\'> </div> <div class=""> <button class="btn btn-default" onclick="addNewVrem(\'VOZ0\')">Добавить</button> </div></div>';
                    //определить тип и спрятать лишнее 
                    if (checkParametricAction(value)) {
                        SetParametricalType(true);
                    }
                    else {
                        SetParametricalType(false);

                    }

                }
                

                break;


            case 'fizVelId':
                goAjaxRequest({
                    url: '/Actions/GetParametricFizVelsEdit/' + this.value,
                    func_success: function (data, status, jqXHR) {
                        // Заменяем часть представления, отвечающего за выбор физической величины
                        //$('#parametricFizVel').replaceWith(data);
                        document.getElementById('parametricFizVel').innerHTML = data;
                    }
                });

                break;
            
        }


    });


    $(document).on('change', ':checkbox', function () {

        switch (this.name) {
            case 'listSelectedPros':
                if (this.checked) {
                    loadCheckBoxChild(this, 'GetProsChildEdit');

                }
                else {
                    document.getElementById(this.value + '_childs').innerHTML = '';
                }

                break;

            case 'listSelectedSpecs':
                if (this.checked) {
                    loadCheckBoxChild(this, 'GetSpecChildEdit');
                }
                else {
                    document.getElementById(this.value + '_childs').innerHTML = '';
                }
                break;

            case 'listSelectedVrems':
                if (this.checked) {
                    loadCheckBoxChild(this, 'GetVremChildEdit');
                }
                else {
                    document.getElementById(this.value + '_childs').innerHTML = '';
                }
                break;

            case 'changeTypeParamActionName':
                if (this.checked) {
                    SetParametricalType(true);
                    
                }
                else {
                    SetParametricalType(false);
                    
                }
                break;

            case 'listSelectedProsNew':
                if (this.checked) {
                    document.getElementById(this.value + '_childs').innerHTML = ' <div class="form-group descrCheckBoxChildEdit"> \
           <div class="" id="'+ this.value + '_PROS"> </div>\
           <div class="">\
               <button class="btn btn-default" onclick="addNewPro(\'' + this.value + '\')">Добавить</button>\
           </div>\
       </div>';
                }
                else
                    document.getElementById(this.value + '_childs').innerHTML = '';
                //_PROS

                break;


            case 'listSelectedVremsNew':
                if (this.checked) {
                    document.getElementById(this.value + '_childs').innerHTML = ' <div class="form-group descrCheckBoxChildEdit"> \
           <div class="" id="' + this.value + '_VREM"> </div>\
           <div class="">\
               <button class="btn btn-default" onclick="addNewVrem(\'' + this.value + '\')">Добавить</button>\
           </div>\
       </div>';
                }
                else
                    document.getElementById(this.value + '_childs').innerHTML = '';
                //_VREM

                break;


            case 'listSelectedSpecsNew':
                if (this.checked) {
                    document.getElementById(this.value + '_childs').innerHTML = ' <div class="form-group descrCheckBoxChildEdit"> \
           <div class="" id="' + this.value + '_SPEC"> </div>\
           <div class="">\
               <button class="btn btn-default" onclick="addNewSpec(\'' + this.value + '\')">Добавить</button>\
           </div>\
       </div>';
                }
                else
                    document.getElementById(this.value + '_childs').innerHTML = '';
                //_SPEC
                break;
        }


    });




    function SetParametricalType(set) {
        if (set) {
            document.getElementById('prosGroup_all').style.display = 'none';
            document.getElementById('specGroup_all').style.display = 'none';
            document.getElementById('vremGroup_all').style.display = 'none';
            document.getElementById('parametricBlock_all').style.display = 'block';
            $('#fizVel input:radio').each(function () {//[type=checkbox] 
                $(this).css('display','block');
            });
            mainObjEdit.parametricAction = true;
        }
        else {
            document.getElementById('prosGroup_all').style.display = 'block';
            document.getElementById('specGroup_all').style.display = 'block';
            document.getElementById('vremGroup_all').style.display = 'block';
            document.getElementById('parametricBlock_all').style.display = 'none';
            $('#fizVel input:radio').each(function () {//[type=checkbox] 
                $(this).css('display', 'none');
            });
            mainObjEdit.parametricAction = false;
        }
        
        
    }




    function checkParametricAction(id) {
        if (id == 'VOZ0') {
            if (document.getElementById('changeTypeParamActionId').checked)
                return true;
        }
        else {


            var checkParametrics = document.getElementById('parametric_action_or_not').value.split(' ');
            for (var i = 0; i < checkParametrics.length; ++i) {//todo вынести в фукнцию

                if (checkParametrics[i] == id) {
                    return true;
                }
            }
        }
        return false;
    }



    function loadCheckBoxChild(ch, meth) {

        var div = document.getElementById((ch.value + "_childs"));

       
            goAjaxRequest({
                url: '/Actions/' + meth + '?id=' + ch.value,
                func_success: function (data, status, jqXHR) {

                    if (data.trim()) {
                        div.innerHTML = data;
                        //loadCheckBoxChild(ch, meth);
                    }
                    else {
                        div.remove();
                    }

                }
            });
       

    }






    //прячем
    function ReplaceDisplayNoneNew(newdiv, oldDiv, changeBut) {
        newdiv.style.display = 'none';
        oldDiv.style.display = 'block';
        if (changeBut)
            changeBut.innerHTML = 'Добавить новый';
    }

    function ReplaceDisplayNoneOld(newdiv, oldDiv, changeBut) {
        newdiv.style.display = 'block';
        oldDiv.style.display = 'none';
        if (changeBut)
            changeBut.innerHTML = 'Использовать существущие';
    }


    function addNewPro(id) {
        
        //if (!id)
        //    id = mainObjEdit.curentActionId;
        var div = document.getElementById(id + '_PROS');
        var strCur = id.split('_')[0] + '_PROS_NEW' + (mainObjEdit.maxNewProId++);



        div.innerHTML += '<div class="one_check_line_edit" id="div_' + div.id + '_all"><input value="' + strCur +
            '" id="' + strCur + '_chch" class="checkBoxClass" name="listSelectedProsNew" type="checkbox"/>' +
            '<button class="btn btn-default" id="' + strCur + '_delbut"  onclick=\'deleteItemPro("' + strCur + '")\'>Удалить</button>' +
            '<input class="form-control" id="'
            + strCur + '_inp" type="text" name="' + id + '" /><div id="' + strCur + '_childs"></div></div>';

    }
    function addNewSpec(id) {
        //if (!id)
        //    id = mainObjEdit.curentActionId;
        var div = document.getElementById(id + '_SPEC');
        var strCur = id.split('_')[0] + '_SPEC_NEW' + (mainObjEdit.maxNewSpecId++);
        div.innerHTML += '<div class="one_check_line_edit"  id="div_' + div.id + '_all"><input value="' + strCur +
            '" id="' + strCur + '_chch" class="checkBoxClass" name="listSelectedSpecsNew" type="checkbox"/>' +
            '<button class="btn btn-default" id="' + strCur + '_delbut"  onclick=\'deleteItemSpec("' + strCur + '")\'>Удалить</button>' +
            '<input class="form-control" id="'
            + strCur + '_inp"  type="text" name="' + id + '" /><div id="' + strCur + '_childs"></div></div>';
    }
    function addNewVrem(id) {
        //if (!id)
        //    id = mainObjEdit.curentActionId;
        var div = document.getElementById(id + '_VREM');
        var strCur = id.split('_')[0] + '_VREM_NEW' + (mainObjEdit.maxNewVremId++);
        div.innerHTML += '<div class="one_check_line_edit"  id="div_' + div.id + '_all"><input value="' + strCur +
            '" id="' + strCur + '_chch" class="checkBoxClass" name="listSelectedVremsNew" type="checkbox"/>' +
            '<button class="btn btn-default" id="' + strCur + '_delbut" onclick=\'deleteItemVrem("' + strCur + '")\'>Удалить</button>' +
            '<input class="form-control" id="'
            + strCur + '_inp"  type="text" name="' + id + '" /><div id="' + strCur + '_childs"></div></div>';
    }

    function addNewFizVelId() {
        var div = document.getElementById('fizVel');
        div.innerHTML += '<input class="form-control" id="FizVelNameNew' + mainObjEdit.maxNewFizVelId++ +
            '_inp" name="FizVelName" type="text" value="">';
    }

    function addNewParametricFizVelId() {
        var div = document.getElementById('parametricFizVel');
        div.innerHTML += '<input class="form-control" id="ParamFizVelNameNew' + mainObjEdit.maxNewParamFizVelId++ +
            '_inp" name="ParamFizVelName" type="text" value="">';
    }





    function changeActionId(id){

        var inp=$('#'+id+'_inp');
        
        if($(inp).prop('readonly'))  {
            $(inp).removeProp('readonly');
            if(!mainObjEdit.massEditActionId.includes(id))
                mainObjEdit.massEditActionId.push(id);

        }
        else{
            $(inp).prop('readonly', true);
        }
    }

    function changeFizVels(id){

        var inp=$('#'+id+'_inp');
        
        if($(inp).prop('readonly'))  {
            $(inp).removeProp('readonly');
            if(!mainObjEdit.massEditFizVels.includes(id))
                mainObjEdit.massEditFizVels.push(id);

        }
        else{
            $(inp).prop('readonly', true);
        }
    }
    
    
    function changeParamFizVels(id){

        var inp=$('#'+id+'_inp');
        
        if($(inp).prop('readonly'))  {
            $(inp).removeProp('readonly');
            if(!mainObjEdit.massEditParamFizVels.includes(id))
                mainObjEdit.massEditParamFizVels.push(id);

        }
        else{
            $(inp).prop('readonly', true);
        }
    }
    
    function changePros(id){

        var inp=$('#'+id+'_inp');
        
        if($(inp).prop('readonly'))  {
            $(inp).removeProp('readonly');
            if(!mainObjEdit.massEditPros.includes(id))
                mainObjEdit.massEditPros.push(id);

        }
        else{
            $(inp).prop('readonly', true);
        }
    }

    function changeSpecs(id){

        var inp = $('#' + id + '_inp');
        
        if($(inp).prop('readonly'))  {
            $(inp).removeProp('readonly');
            if(!mainObjEdit.massEditSpecs.includes(id))
                mainObjEdit.massEditSpecs.push(id);

        }
        else{
            $(inp).prop('readonly', true);
        }
    }
    function changeVrems(id){

        var inp = $('#' + id + '_inp');
        
        if($(inp).prop('readonly'))  {
            $(inp).removeProp('readonly');
            if(!mainObjEdit.massEditVrems.includes(id))
                mainObjEdit.massEditVrems.push(id);

        }
        else{
            $(inp).prop('readonly', true);
        }
    }

    
    
    //-----------------------------------??????????????????




    //type: 1-pros 2-spec,3-vrem
    function deleteItemPro(id) {
        deleteItem(id,1);
    }
    function deleteItemSpec(id) {
        deleteItem(id, 2);
    }
    function deleteItemVrem(id) {
        deleteItem(id, 3);
    }

    //type: 1-pros 2-spec,3-vrem
    function deleteItem(id,type) {
        // <div id="div_(pro.Id)_all">
        var delbut = document.getElementById(id + '_delbut');
        var checkboxChilds = $('#' + id + '_chch');
        var inp = $('#' + id + '_inp');
        if (delbut.innerHTML.trim() == 'Удалить') {
            //"удаляем"
            if (id.indexOf('_NEW') < 0) {
                switch (type) {
                    case 1:
                        mainObjEdit.massDeletedPros.push(id);
                        break;
                    case 2:
                        mainObjEdit.massDeletedSpecs.push(id);
                        break;
                    case 3:
                        mainObjEdit.massDeletedVrems.push(id);
                        break;
                }
            }
           
            delbut.innerHTML = 'Восстановить';
            var divChilds = document.getElementById(id + '_childs');
            divChilds.innerHTML = '';
            $(checkboxChilds).removeAttr("checked")//$(ch).prop("checked")
            $(checkboxChilds).css('display', 'none');
            $(inp).css('background-color', 'grey');
            $(inp).prop('readonly', true);
            
        }
        else {
            //восстанавливаем
            if (id.indexOf('_NEW') < 0) {
                switch (type) {
                    case 1:
                        for (var i = 0; i < mainObjEdit.massDeletedPros.length; ++i) {
                            if (mainObjEdit.massDeletedPros[i] == id) {
                                mainObjEdit.massDeletedPros.splice(i, 1);
                                break;
                            }
                        }

                        break;
                    case 2:
                        //mainObjEdit.massDeletedSpecs.push(id);
                        for (var i = 0; i < mainObjEdit.massDeletedSpecs.length; ++i) {
                            if (mainObjEdit.massDeletedSpecs[i] == id) {
                                mainObjEdit.massDeletedSpecs.splice(i, 1);
                                break;
                            }
                        }
                        break;
                    case 3:
                        //mainObjEdit.massDeletedVrems.push(id);
                        for (var i = 0; i < mainObjEdit.massDeletedVrems.length; ++i) {
                            if (mainObjEdit.massDeletedVrems[i] == id) {
                                mainObjEdit.massDeletedVrems.splice(i, 1);
                                break;
                            }
                        }
                        break;
                }
            }
            else {
                $(inp).removeProp('readonly');
            }
            delbut.innerHTML = 'Удалить';
            $(checkboxChilds).css('display', 'inline');
            //
            $(inp).css('background-color', 'white');


        }
    }




    function saveForm() {
        //TODO валидация
        //type: 1-actionid ,2-fizvell,3-paramfizvell,4-pros,5-spec,6-vrem
        //TypeAction: 1-добавление ,2-редактирование, 3- удаление
        function construct_(id, parentId, type, text, parametric, typeAction) {
            return struct = {
                Id: id,
                ParentId: parentId,
                Type: type,
                Text: text,
                Parametric: parametric,
                TypeAction: typeAction
            };
        }
        

        var resMass = [];

        //var curentActionId;
        var curentFizVel=null;


        //$('#actionId_all input:radio:checked').each(function () {//[type=checkbox] 
        //    curentActionId= this.val();
        //});
        $('#fizVel input:radio:checked').each(function () {//[type=checkbox] 
            curentFizVel = this.val();
        });
        //struct.Parametric = mainObjEdit.parametricAction;


        //отредактированные actionId
        for (var i = 0; i < mainObjEdit.massEditActionId.length; ++i) {
            //var checkObj=$('#'+mainObjEdit.massEditActionId[i]+'_inp');
            var strId = '#' + mainObjEdit.massEditActionId[i] + '_inp';
            var checkObj = $(strId);
            if ($("input").is(strId))
                resMass.push(construct_(mainObjEdit.massEditActionId[i], null, 1, $(checkObj).val(), false, 2));
        }
        //отредактированные FizVels
        for (var i = 0; i < mainObjEdit.massEditFizVels.length; ++i) {
            //var checkObj = $('#' + mainObjEdit.massEditFizVels[i] + '_inp');
            var strId = '#' + mainObjEdit.massEditFizVels[i] + '_inp';
            var checkObj = $(strId);
            if ($("input").is(strId))
                resMass.push(construct_(mainObjEdit.massEditFizVels[i], mainObjEdit.curentActionId, 2, $(checkObj).val(), false, 2));
        }

        //отредактированные ParamFizVels
        for (var i = 0; i < mainObjEdit.massEditParamFizVels.length; ++i) {
           // var checkObj = $('#' + mainObjEdit.massEditParamFizVels[i] + '_inp');
            var strId = '#' + mainObjEdit.massEditParamFizVels[i] + '_inp';
            var checkObj = $(strId);
            if ($("input").is(strId))
                resMass.push(construct_(mainObjEdit.massEditParamFizVels[i], checkObj.prop('name'), 3, $(checkObj).val(), false, 2));
        }

        //отредактированные pro
        for (var i = 0; i < mainObjEdit.massEditPros.length; ++i) {
            //var checkObj = $('#' + mainObjEdit.massEditPros[i] + '_inp');
            var strId = '#' + mainObjEdit.massEditPros[i] + '_inp';
            var checkObj = $(strId);
            if ($("input").is(strId))
                resMass.push(construct_(mainObjEdit.massEditPros[i], checkObj.prop('name'), 4, $(checkObj).val(), false, 2));
        }

        //отредактированные spec
        for (var i = 0; i < mainObjEdit.massEditSpecs.length; ++i) {
           // var checkObj = $('#' + mainObjEdit.massEditSpecs[i] + '_inp');
            var strId = '#' + mainObjEdit.massEditSpecs[i] + '_inp';
            var checkObj = $(strId);
            if ($("input").is(strId))
                resMass.push(construct_(mainObjEdit.massEditSpecs[i], checkObj.prop('name'), 5, $(checkObj).val(), false, 2));
        }

        //отредактированные vrem
        for (var i = 0; i < mainObjEdit.massEditVrems.length; ++i) {
           // var checkObj = $('#' + mainObjEdit.massEditVrems[i] + '_inp');
            var strId = '#' + mainObjEdit.massEditVrems[i] + '_inp';
            var checkObj = $(strId);
            if ($("input").is(strId))
                resMass.push(construct_(mainObjEdit.massEditVrems[i], checkObj.prop('name'), 6, $(checkObj).val(), false, 2));
        }

        //удаленные pro
        for (var i = 0; i < mainObjEdit.massDeletedPros.length; ++i) {
            //var checkObj = $('#' + mainObjEdit.massDeletedPros[i] + '_inp');
            var strId = '#' + mainObjEdit.massDeletedPros[i] + '_inp';
            var checkObj = $(strId);
            if ($("input").is(strId))
                resMass.push(construct_(mainObjEdit.massDeletedPros[i], checkObj.prop('name'), 4, $(checkObj).val(), false, 3));
        }
        
        //удаленные spec
        for (var i = 0; i < mainObjEdit.massDeletedSpecs.length; ++i) {
            //var checkObj = $('#' + mainObjEdit.massDeletedSpecs[i] + '_inp');
            var strId = '#' + mainObjEdit.massDeletedSpecs[i] + '_inp';
            var checkObj = $(strId);
            if ($("input").is(strId))
                resMass.push(construct_(mainObjEdit.massDeletedSpecs[i], checkObj.prop('name'), 5, $(checkObj).val(), false, 3));
        }

        //удаленные vrem
        for (var i = 0; i < mainObjEdit.massDeletedVrems.length; ++i) {
            //var checkObj = $('#' + mainObjEdit.massDeletedVrems[i] + '_inp');
            var strId = '#' + mainObjEdit.massDeletedVrems[i] + '_inp';
            var checkObj = $(strId);
            if ($("input").is(strId))
                resMass.push(construct_(mainObjEdit.massDeletedVrems[i], checkObj.prop('name'), 6, $(checkObj).val(), false, 3));
        }
       

        //добавление actionId
        if (mainObjEdit.curentActionId == 'VOZ0') {

            //var checkObj = $('#VOZ0_inp');
            var strId = '#VOZ0_inp';
            var checkObj = $(strId);
            if ($("input").is(strId))
                resMass.push(construct_('VOZ0', null, 1, $(checkObj).val(), document.getElementById('changeTypeParamActionId').checked, 1));
        }

        //добавление FizVel
        for (var i = 1; i < mainObjEdit.maxNewFizVelId; ++i) {
           // var checkObj = $('#FizVelNameNew' + mainObjEdit.maxNewFizVelId[i] + '_inp');
            var strId = '#FizVelNameNew' + i + '_inp';
            var checkObj = $(strId);
            if ($("input").is(strId))
                resMass.push(construct_('FizVelNameNew' + i, checkObj.prop('name'), 2, $(checkObj).val(), false, 1));
        }
        
        //добавление ParamFizVel
        for (var i = 1; i < mainObjEdit.maxNewParamFizVelId; ++i) {
            //var checkObj = $('#ParamFizVelNameNew' + mainObjEdit.maxNewParamFizVelId[i] + '_inp');
            var strId = '#ParamFizVelNameNew' + i + '_inp';
            var checkObj = $(strId);
            if ($("input").is(strId))
                resMass.push(construct_('ParamFizVelNameNew' + i, curentFizVel, 3, $(checkObj).val(), false, 1));
        }


        //добавление pro
        for (var i = 1; i < mainObjEdit.maxNewProId; ++i) {
            //var checkObj = $('#' + mainObjEdit.curentActionId + "_PROS_NEW" + mainObjEdit.maxNewProId[i] + '_inp');//VOZ8_PROS_NEW2_inp
            var strId = '#' + mainObjEdit.curentActionId + "_PROS_NEW" + i + '_inp';
            var checkObj = $(strId);
            if ($("input").is(strId))
                resMass.push(construct_(mainObjEdit.curentActionId + "_PROS_NEW" + i, checkObj.prop('name'), 4, $(checkObj).val(), false, 1));
        }

        //добавление spec
        for (var i = 1; i < mainObjEdit.maxNewSpecId; ++i) {
            var strId = '#' + mainObjEdit.curentActionId + "_SPEC_NEW" + i + '_inp';
            var checkObj = $(strId);
            if ($("input").is(strId))
                resMass.push(construct_(mainObjEdit.curentActionId + "_SPEC_NEW" + i, checkObj.prop('name'), 5, $(checkObj).val(), false, 1));
        }

        //добавление vrem
        for (var i = 1; i < mainObjEdit.maxNewVremId; ++i) {
            
            var strId = '#' + mainObjEdit.curentActionId + "_VREM_NEW" + i + '_inp';
            var checkObj = $(strId);
            if ($("input").is(strId))
                resMass.push(construct_(mainObjEdit.curentActionId + "_VREM_NEW" + i, checkObj.prop('name'), 6, $(checkObj).val(), false, 1));
        }

        


        
        formData = {
            json: JSON.stringify(resMass)


        };




        goAjaxRequest({
            url: "/Physic/CreateDescription",
            data: formData,
            func_success: function (req, status, jqXHR) {
                var data = req;//.responseText
                //var type = data[0].trim();


            }, type: 'POST'
        });


    }









</script>














