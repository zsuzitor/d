
@{ 
    dip.Models.ViewModel.DescriptionForm a= ViewBag.form;
    string type=ViewBag.type ;
    dip.Models.Domain.DescrSearchI param =ViewBag.param ;

}

<div class="form-horizontal">

    <hr />
    @*@( +a.Postfix)*@
    <div class="form-group">
        <label id=@("actionLabel"+type) class="control-label col-md-2" value="@a.currentActionId">Название воздействия</label>
        @*@Html.Label("Название воздействия", new { id = "actionLabel", @class = "control-label col-md-2" })*@




        <div class="col-md-10">

            @*@Html.DropDownList("actionId" + type, null, htmlAttributes: new { id = "action" + type, @class = "form-control" })*@


            <select name=@("actionId"+ type) class="form-control" id=@("action"+type)>

                @foreach (var i in a.actionId)
                {
                    if (param?.actionId == i.Id)
                    {
                        <option selected value="@i.Id">@i.Name</option>
                    }
                    else
                    {
                        <option value="@i.Id">@i.Name</option>
                    }

                }
            </select>


            @*@Html.ValidationMessageFor(model => model.Action.AllActionId, "", new { @class = "text-danger" })*@
        </div>
    </div>
    <div class="form-group">
        <label id="" class="control-label col-md-2">Тип входа</label>
        @*@Html.Label("Тип входа", new { @class = "control-label col-md-2" })*@
        <div class="col-md-10">
            <select name=@("actionType"+ type) class="form-control" id=@("actionType"+type)>
                @foreach (var i in a.actionType)
                {

                    if (param?.actionType == i.Id)
                    {
                        <option selected value="@i.Id">@i.Name</option>
                    }
                    else
                    {
                        <option value="@i.Id">@i.Name</option>
                    }



                }
            </select>

            @*@Html.DropDownList("actionType" + type, null, htmlAttributes: new { @class = "form-control" })*@
            @*@Html.ValidationMessageFor(model => model.Action.ActionType_Id, "", new { @class = "text-danger" })*@
        </div>
    </div>
    <div id=@("fizVelGroup"+ type)>

        @Html.Action("DescrFormFizVels", "Helpers", new { type = type, fizVelId = a.fizVelId, param = param })


    </div>
    @Html.Action("DescrFormParamFizVels", "Helpers", new { type = type, parametricFizVelId = a.parametricFizVelId, param = param })


    @if (a.pros.Count > 0)
    {
        <label class="control-label col-md-2">Пространственные характеристики</label>
            <div id=@("prosGroup"+type)>
                @*<div class="form-group" id=@("pros" + type)>*@

                @Html.Action("DescrFormPros", "Helpers", new { type = type, pros = a.pros, param = param })


                @*</div>*@
            </div>
    }
    @if (a.spec.Count > 0)
    {
        <label class="control-label col-md-2">Специальные характеристики</label>
            <div id=@("specGroup"+type)>

                @Html.Action("DescrFormSpec", "Helpers", new { type = type, specs = a.spec, param = param })




            </div>
    }
    @if (a.vrem.Count > 0)
    {
        <label class="control-label col-md-2">Временные характеристики</label>
        <div id=@("vremGroup"+type)>
            @Html.Action("DescrFormVrem", "Helpers", new { type = type, vrems = a.vrem, param = param })



        </div>
    }

    @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="nameOfButton" value="Отмена" class="btn btn-default" />
                <input type="submit" name="nameOfButton" value="Далее" class="btn btn-default" />
            </div>
        </div>*@
</div>















