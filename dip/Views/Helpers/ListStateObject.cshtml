@model dip.Models.ViewModel.HelpersV.FormStateObjectV



@if (Model.States != null)
{
    string[] needSelectedList = Model.Param.Split(new string[] { " " }, StringSplitOptions.RemoveEmptyEntries);
    <div class="objectInputChilds">
        @foreach (var i2 in Model.States)
        {
            
                bool? needSelected = needSelectedList?.Contains(i2.Id);
            
                <label>
                    @if (needSelected == true)
                    {

                        <input type="radio" class="radioClass" name=@("change_state_radio_"+Model.Type+"_"+i2.Parent) checked value=@("change_state_radio_"+Model.Type+"_"+i2.Id) id=@("change_state_radio_id_"+Model.Type+"_"+i2.Id) />
                    }
                    else
                    {
                        <input type="radio" class="radioClass" name=@("change_state_radio_"+Model.Type+"_"+i2.Parent) value=@("change_state_radio_"+Model.Type+"_"+i2.Id) id=@("change_state_radio_id_"+Model.Type+"_"+i2.Id) />

                    }
                    @i2.Name
                </label>
                
                if (i2.CountPhase != null && i2.CountPhase > 0)
                {
                <input type="hidden" id=@("CountPhase_state_"+i2.Id) value=@(""+i2.CountPhase) />
            }
            <div id=@("stateChilds_"+Model.Type+"_"+i2.Id)>
                @foreach (var i in i2.Childs)
                {
                    <div>
                        @Html.Action("ListStateObject", "Helpers", new { a = i, type = Model.Type, param = Model.Param })
                    </div>
                }
            </div>
        }

    </div>
}


