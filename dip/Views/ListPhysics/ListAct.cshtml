


@model dip.Models.ViewModel.ListPhysicsV.ListActV

@{
    ViewBag.Title = "ListAct";
}

@*<h2>ListAct</h2>*@

<div class="ListAct_MainDiv">
    <div class="ListAct_OneColumn div_inline_block">

        <h1>Существующие списки</h1>
        <div class="ListAct_ExistList" id="ListAct_ExistList_id">
            @if (Model.Lists.Count == 0)
            {
                <p>Пока не создано ни 1 списка</p>
            }
            @foreach (var i in Model.Lists)
            {
                bool sel = Model.CurrentListId == i.Id;
                @Html.Action("ListPhysItem", "Helpers", new { item = i, select = sel })

            }

        </div>
        Добавить новый
        <div>
            <input class="form-control" placeholder="Название" id="NewListName_id" type="text" />
            @*<button class="btn btn-default" onclick="AddNewList()">Добавить</button>*@
            <div class="button_circle_img_30 button_circle_plus_" onclick="AddNewList()" title="Добавить"></div>
        </div>
    </div><div class="ListAct_OneColumn div_inline_block">
    <div id="divEditCurrentList_id" style="display:none;">
        <label>Название списка</label>
        <input class="form-control" placeholder="Введите название списка" id="inputNameEditCurrentList_id" type="text" />
        <label>Id списка</label>
        <label class="form-control" id="idCurrentList_id"></label>
        @*<button class="btn btn-default" onclick="SaveChangesCurrentList()">Сохранить изменения</button>*@
        <div class="button_circle_img_30 button_circle_save_" onclick="SaveChangesCurrentList()" title="Сохранить изменения"></div>
        @*<button class="btn btn-default" onclick="DeleteCurrentList()">Удалить</button>*@
        <div class="button_circle_img_30 button_circle_del_" onclick="DeleteCurrentList()" title="Удалить"></div>
    </div>




        <h1> В списке</h1>

        <div id="PhysInCurrentList" class="PhysInCurrentList_cl">

        </div>
        <div>
            Добавить
            <div>
                @*<button onclick="AddNewPhysInCurList()" class="btn btn-default">Добавить</button>*@
                <div class="button_circle_img_30 button_circle_plus_" onclick="AddNewPhysInCurList()" title="Добавить"></div>
            </div>
            @*Id физического эффекта*@
            <div>
                <input  onchange="clearFeLink()" id="AddNewPhysInCurListInput" class="form-control" placeholder="Id физического эффекта" type="number" />

                
                
                <button class="btn btn-default" onclick="ShowLinkFetext()">Показать Ссылку на страницу ФЭ</button>
                @*<a onclick="alert()">Страница ФЭ</a>*@
                @*<div><p>ФЭ-ссылка</p><button class="btn btn-default" onclick="">закинуть пользователю</button></div>*@
                <div id="divLinkCurrFetext_id"></div>

            </div>
            @*Поиск
                <div>
                    TODO
                </div>*@
        </div>

    <div>
        <h1> Выдан пользователям</h1>
        <div>
            <button id="butLoadUserHasCurList" class="btn btn-default" onclick="LoadUsersForCurrentList()">Показать пользователей</button>
            <div style="display:none;" id="UsersHasCurrentList_id">
                 
            </div>
        </div>
    </div>
    </div>

</div>


<script>
    //ListActMainObject.ListId
    var ListActMainObject = {
        ListId: null
    };

    $(document).ready(function ()
    {
        //let curListId;
        $('#ListAct_ExistList_id input:radio:checked').each(function () {//[type=checkbox] 
            //curListId = this.id.split('ListPhysExistItem_')[1];
            ListActMainObject.ListId = this.id.split('ListPhysExistItem_')[1];
        });
        if (ListActMainObject.ListId) {
            
            
            LoadOneListData(ListActMainObject.ListId);
        }
    });


    function AddNewList() {
        var formData = { name: document.getElementById('NewListName_id').value };
        goAjaxRequest({
            url: "/ListPhysics/CreateList",
            data: formData,
            func_success: function (req, status, jqXHR) {
                document.getElementById('ListAct_ExistList_id').innerHTML+=req;

            }, type: 'POST'
        });



    }



    $(document).on('change', ':radio', function (){

        if (this.name == 'ListPhysExistItem') {
            ListActMainObject.ListId = this.id.split('ListPhysExistItem_')[1];
            //let id = this.id.split('ListPhysExistItem_')[1];
            LoadOneListData(ListActMainObject.ListId);
        }

    });


    function LoadOneListData(id) {
        
        var formData = { id: id };
        goAjaxRequest({
            url: "/ListPhysics/LoadPhysInList",
            data: formData,
            func_success: function (req, status, jqXHR) {
                document.getElementById('PhysInCurrentList').innerHTML = req;
                document.getElementById('divEditCurrentList_id').style.display = 'block';
                document.getElementById('inputNameEditCurrentList_id').value = document.getElementById('ListHiddenName_id_' + id).value;
                document.getElementById('idCurrentList_id').innerHTML = id;


            }, type: 'GET'
        });
    }



    function AddNewPhysInCurList() {
        var formData = { idphys: document.getElementById('AddNewPhysInCurListInput').value };
        //$('#ListAct_ExistList_id input:radio:checked').each(function () {//[type=checkbox] 
        //    formData.idlist = this.id.split('ListPhysExistItem_')[1];
        //});
        formData.idlist=ListActMainObject.ListId ;

        if (!formData.idlist) {
            alert("Выберите список");
            return;
        }
        if (!formData.idphys) {
            alert("Введите id");
            return;
        }
            goAjaxRequest({
                url: "/ListPhysics/AddToList",
                data: formData,
                func_success: function (req, status, jqXHR) {
                    document.getElementById('PhysInCurrentList').innerHTML += req;

                }, type: 'POST'
            });
        
    }



    function SaveChangesCurrentList() {
        //document.getElementById('inputNameEditCurrentList_id').value
        var formData = { name: document.getElementById('inputNameEditCurrentList_id').value };
        var blockList;
        //$('#ListAct_ExistList_id input:radio:checked').each(function () {//[type=checkbox] 
        //    blockList = this;
        //    formData.id = this.id.split('ListPhysExistItem_')[1];
        //});
        formData.id = ListActMainObject.ListId;
        goAjaxRequest({
            url: "/ListPhysics/EditList",
            data: formData,
            func_success: function (req, status, jqXHR) {
                if (req.trim()) {
                    document.getElementById('ListPhysExistItemNameLabel_' + formData.id).innerHTML = formData.name;
                    alert("Успешно изменено");
                }
                else {
                    alert("Что то пошло не так");
                }
                
                //todo обновить слева в списке
            }, type: 'POST'
        });


    }


    function DeleteCurrentList() {
        //document.getElementById('inputNameEditCurrentList_id').value
        var formData = { name: document.getElementById('inputNameEditCurrentList_id').value };
       
        //$('#ListAct_ExistList_id input:radio:checked').each(function () {//[type=checkbox] 
            
        //    formData.id = this.id.split('ListPhysExistItem_')[1];
        //});
        formData.id = ListActMainObject.ListId;
        goAjaxRequest({
            url: "/ListPhysics/DeleteList",
            data: formData,
            func_success: function (req, status, jqXHR) {
                if (req.trim()) {
                    //alert("Успешно удалено");
                    document.getElementById('ListPhysExistItemMainDiv_' + formData.id).remove();
                    document.getElementById('divEditCurrentList_id').style.display = 'none';
                    document.getElementById('PhysInCurrentList').innerHTML = '';
                    ListActMainObject.ListId = null;
                    
                }
                else {
                    alert("Что то пошло не так");
                }

                //todo обновить слева в списке
            }, type: 'POST'
        });


    }


    function DeleteFromCurrentList(id) {

        var formData = { idphys: id };
       
        //$('#ListAct_ExistList_id input:radio:checked').each(function () {//[type=checkbox] 
            
        //    formData.idlist = this.id.split('ListPhysExistItem_')[1];
        //});
        formData.idlist = ListActMainObject.ListId;
        goAjaxRequest({
            url: "/ListPhysics/DeleteFromList",
            data: formData,
            func_success: function (req, status, jqXHR) {
                if (req.trim()) {
                    //alert("Успешно удалено");
                    document.getElementById('oneP_onePhysInListItem_id_' + id).remove();
                }
                else {
                    alert("Что то пошло не так");
                }

                //todo обновить слева в списке
            }, type: 'POST'
        });


    }
    

    function ShowLinkFetext() {
        let link = '/Physic/Details/';
        let idfe = document.getElementById("AddNewPhysInCurListInput").value;
        link += idfe;
        let tegA = '<a href="' + link + '">Страница ФЭ</a>';
        if (idfe)
            document.getElementById('divLinkCurrFetext_id').innerHTML = tegA;
    }
    function clearFeLink() {
        document.getElementById('divLinkCurrFetext_id').innerHTML = '';
    }




    function LoadUsersForCurrentList() {
        var formData = { id: ListActMainObject.ListId };
        var div = document.getElementById('UsersHasCurrentList_id');
        var but = document.getElementById('butLoadUserHasCurList');

        if (!formData.id) {
            alert("Выберите список");
            return;
        }
        if (!div.innerHTML.trim()) {
            //загрузить
            goAjaxRequest({
                url: "/ListPhysics/LoadUsersForList",
                data: formData,
                func_success: function (req, status, jqXHR) {
                    div.innerHTML = req;

                }, type: 'GET'
            });
            div.style.display = 'block';
            but.innerHTML = 'Скрыть пользователей';
        }
        else {
            //загружать не надо, надо показать\скрыть
            if (div.style.display == 'block') {
                //скрыть
                div.style.display = 'none';
                but.innerHTML = 'Показать пользователей';
            }
            else {
                //показать
                div.style.display = 'block';
                but.innerHTML = 'Скрыть пользователей';
            }
        }
       
    }
</script>